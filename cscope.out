cscope 15 /k/te/v3/ver3-home/code -q 0000002339 0000189124
	@INCFILE.H

9 
	~"ty≥def.h
"

10 
	~"globÆ.h
"

11 
	~"REG320.h
"

12 
	~"tmu3112Reg.h
"

13 
	~"usbå™.h
"

16 
	~<°rög.h
>

17 
	~"öâøn.h
"

18 
	~"öåös.h
"

	@REG320.H

9 #i‚de‡
__REG320_H__


10 
	#__REG320_H__


	)

13 
s‰
 
	gP0
 = 0x80;

14 
s‰
 
	gP1
 = 0x90;

15 
s‰
 
	gP2
 = 0xA0;

16 
s‰
 
	gP3
 = 0xB0;

17 
s‰
 
	gPSW
 = 0xD0;

18 
s‰
 
	gACC
 = 0xE0;

19 
s‰
 
	gB
 = 0xF0;

20 
s‰
 
	gSP
 = 0x81;

21 
s‰
 
	gDPL
 = 0x82;

22 
s‰
 
	gDPH
 = 0x83;

23 
s‰
 
	gPCON
 = 0x87;

24 
s‰
 
	gTCON
 = 0x88;

25 
s‰
 
	gTMOD
 = 0x89;

26 
s‰
 
	gTL0
 = 0x8A;

27 
s‰
 
	gTL1
 = 0x8B;

28 
s‰
 
	gTH0
 = 0x8C;

29 
s‰
 
	gTH1
 = 0x8D;

30 
s‰
 
	gIE
 = 0xA8;

31 
s‰
 
	gIP
 = 0xB8;

32 
s‰
 
	gSCON0
 = 0x98;

33 
s‰
 
	gSBUF0
 = 0x99;

36 
s‰
 
	gDPL1
 = 0x84;

37 
s‰
 
	gDPH1
 = 0x85;

38 
s‰
 
	gDPS
 = 0x86;

39 
s‰
 
	gCKCON
 = 0x8E;

40 
s‰
 
	gEXIF
 = 0x91;

41 
s‰
 
	gSADDR0
 = 0xA9;

42 
s‰
 
	gSADDR1
 = 0xAA;

43 
s‰
 
	gSADEN0
 = 0xB9;

44 
s‰
 
	gSADEN1
 = 0xBA;

45 
s‰
 
	gSCON1
 = 0xC0;

46 
s‰
 
	gSBUF1
 = 0xC1;

47 
s‰
 
	gSTATUS
 = 0xC5;

48 
s‰
 
	gTA
 = 0xC7;

49 
s‰
 
	gT2CON
 = 0xC8;

50 
s‰
 
	gT2MOD
 = 0xC9;

51 
s‰
 
	gRCAP2L
 = 0xCA;

52 
s‰
 
	gRCAP2H
 = 0xCB;

53 
s‰
 
	gTL2
 = 0xCC;

54 
s‰
 
	gTH2
 = 0xCD;

55 
s‰
 
	gWDCON
 = 0xD8;

56 
s‰
 
	gEIE
 = 0xE8;

57 
s‰
 
	gEIP
 = 0xF8;

59 
s‰16
 
	gDPTR
 = 0x82;

62 
sbô
 
	gCY
 = 
PSW
^7;

63 
sbô
 
	gAC
 = 
PSW
^6;

64 
sbô
 
	gF0
 = 
PSW
^5;

65 
sbô
 
	gRS1
 = 
PSW
^4;

66 
sbô
 
	gRS0
 = 
PSW
^3;

67 
sbô
 
	gOV
 = 
PSW
^2;

68 
sbô
 
	gFL
 = 
PSW
^1;

69 
sbô
 
	gP
 = 
PSW
^0;

72 
sbô
 
	gTF1
 = 
TCON
^7;

73 
sbô
 
	gTR1
 = 
TCON
^6;

74 
sbô
 
	gTF0
 = 
TCON
^5;

75 
sbô
 
	gTR0
 = 
TCON
^4;

76 
sbô
 
	gIE1
 = 
TCON
^3;

77 
sbô
 
	gIT1
 = 
TCON
^2;

78 
sbô
 
	gIE0
 = 
TCON
^1;

79 
sbô
 
	gIT0
 = 
TCON
^0;

82 
sbô
 
	gEA
 = 
IE
^7;

83 
sbô
 
	gES1
 = 
IE
^6;

84 
sbô
 
	gET2
 = 
IE
^5;

85 
sbô
 
	gES0
 = 
IE
^4;

86 
sbô
 
	gET1
 = 
IE
^3;

87 
sbô
 
	gEX1
 = 
IE
^2;

88 
sbô
 
	gET0
 = 
IE
^1;

89 
sbô
 
	gEX0
 = 
IE
^0;

92 
sbô
 
	gPS1
 = 
IP
^6;

93 
sbô
 
	gPT2
 = 
IP
^5;

94 
sbô
 
	gPS0
 = 
IP
^4;

95 
sbô
 
	gPT1
 = 
IP
^3;

96 
sbô
 
	gPX1
 = 
IP
^2;

97 
sbô
 
	gPT0
 = 
IP
^1;

98 
sbô
 
	gPX0
 = 
IP
^0;

101 
sbô
 
	gINT5
 = 
P1
^7;

102 
sbô
 
	gINT4
 = 
P1
^6;

103 
sbô
 
	gINT3
 = 
P1
^5;

104 
sbô
 
	gINT2
 = 
P1
^4;

105 
sbô
 
	gTXD1
 = 
P1
^3;

106 
sbô
 
	gSEEPROM_TYPE
 = 
P1
^2;

107 
sbô
 
	gSDA
 = 
P1
^1;

108 
sbô
 
	gSCL
 = 
P1
^0;

116 
sbô
 
	gRD
 = 
P3
^7;

117 
sbô
 
	gWR
 = 
P3
^6;

118 
sbô
 
	gT1
 = 
P3
^5;

119 
sbô
 
	gT0
 = 
P3
^4;

120 
sbô
 
	gINT1
 = 
P3
^3;

121 
sbô
 
	gINT0
 = 
P3
^2;

122 
sbô
 
	gTXD0
 = 
P3
^1;

123 
sbô
 
	gRXD0
 = 
P3
^0;

126 
sbô
 
	gSM0
 = 
SCON0
^7;

127 
sbô
 
	gSM1
 = 
SCON0
^6;

128 
sbô
 
	gSM2
 = 
SCON0
^5;

129 
sbô
 
	gREN
 = 
SCON0
^4;

130 
sbô
 
	gTB8
 = 
SCON0
^3;

131 
sbô
 
	gRB8
 = 
SCON0
^2;

132 
sbô
 
	gTI
 = 
SCON0
^1;

133 
sbô
 
	gRI
 = 
SCON0
^0;

136 
sbô
 
	gSM01
 = 
SCON1
^7;

137 
sbô
 
	gSM11
 = 
SCON1
^6;

138 
sbô
 
	gSM21
 = 
SCON1
^5;

139 
sbô
 
	gREN1
 = 
SCON1
^4;

140 
sbô
 
	gTB81
 = 
SCON1
^3;

141 
sbô
 
	gRB81
 = 
SCON1
^2;

142 
sbô
 
	gTI1
 = 
SCON1
^1;

143 
sbô
 
	gRI1
 = 
SCON1
^0;

146 
sbô
 
	gTF2
 = 
T2CON
^7;

147 
sbô
 
	gEXF2
 = 
T2CON
^6;

148 
sbô
 
	gRCLK
 = 
T2CON
^5;

149 
sbô
 
	gTCLK
 = 
T2CON
^4;

150 
sbô
 
	gEXEN2
 = 
T2CON
^3;

151 
sbô
 
	gTR2
 = 
T2CON
^2;

152 
sbô
 
	gC_T2
 = 
T2CON
^1;

153 
sbô
 
	gCP_RL2
 = 
T2CON
^0;

156 
sbô
 
	gSMOD_1
 = 
WDCON
^7;

157 
sbô
 
	gPOR
 = 
WDCON
^6;

158 
sbô
 
	gEPFI
 = 
WDCON
^5;

159 
sbô
 
	gPFI
 = 
WDCON
^4;

160 
sbô
 
	gWDIF
 = 
WDCON
^3;

161 
sbô
 
	gWTRF
 = 
WDCON
^2;

162 
sbô
 
	gEWT
 = 
WDCON
^1;

163 
sbô
 
	gRWT
 = 
WDCON
^0;

166 
sbô
 
	gEWDI
 = 
EIE
^4;

167 
sbô
 
	gEX5
 = 
EIE
^3;

168 
sbô
 
	gEX4
 = 
EIE
^2;

169 
sbô
 
	gEX3
 = 
EIE
^1;

170 
sbô
 
	gEX2
 = 
EIE
^0;

173 
sbô
 
	gPWDI
 = 
EIP
^4;

174 
sbô
 
	gPX5
 = 
EIP
^3;

175 
sbô
 
	gPX4
 = 
EIP
^2;

176 
sbô
 
	gPX3
 = 
EIP
^1;

177 
sbô
 
	gPX2
 = 
EIP
^0;

	@SCSI.h

5 
	#SCSICMD_FORMAT_FACTORY
 0

	)

6 
	#SCSICMD_FORMAT_USER_COMPLETE
 1

	)

7 
	#SCSICMD_FORMAT_USER_LOWLEVEL
 2

	)

8 
	#SCSICMD_FORMAT_ADMIN
 3

	)

10 
	#SCSICMD_ERASE_LBA
 0

	)

11 
	#SCSICMD_ERASE_ALL
 1

	)

13 
	#WEBKEY_DATA_LENGTH
 0x5000

	)

14 
	#VENDOR_NAME_LENGTH
 8

	)

15 
	#PASSWORD_LENGTH
 8

	)

16 
	#WEB_ADDRESS_LENGTH
 64

	)

20 
bô
 
g_bRódPhysiˇl
, 
g_bUN0Sèπ
, 
g_bUN1Sèπ
, 
g_bUN2Sèπ
;

26 #ifde‡
_SCSI_C


27 
uöt8
 
	gskeybuf„r
;

28 
uöt8
 
	gascbuf„r
;

29 
uöt8
 
	gascqbuf„r
;

30 
uöt8
 
	gîr‹Êag
;

32 
d©a
 
UCHAR
 
	gg_ucLUN
;

34 
BYTE
 
bd©a
 
	ggfscsi°©us1
;

36 
sbô
 
	gg_bLun1MediumCh™ged
 = 
gfscsi°©us1
^7;

37 
sbô
 
	gg_bLun0MediumCh™ged
 = 
gfscsi°©us1
^6;

38 
sbô
 
	gg_bNŸRódy
 = 
gfscsi°©us1
^5;

39 
sbô
 
	gg_bCDROME«bÀ
 = 
gfscsi°©us1
^4;

40 
sbô
 
	gg_bCDROM2k
 = 
gfscsi°©us1
^3;

41 
sbô
 
	gg_bCDBoŸ
 = 
gfscsi°©us1
^2;

42 
sbô
 
	gg_bWrôePrŸe˘
 = 
gfscsi°©us1
^1;

43 
sbô
 
	gg_bNextIsSu•íd
 = 
gfscsi°©us1
^0;

45 
BYTE
 
bd©a
 
	ggfscsi°©us2
;

46 
sbô
 
	gg_bN‹mÆMode
 = 
gfscsi°©us2
^7;

47 
sbô
 
	gg_bTe°LED
 = 
gfscsi°©us2
^6;

48 
sbô
 
	gg_bRódPhysiˇl
 = 
gfscsi°©us2
^5;

49 
sbô
 
	gg_bUN0Sèπ
 = 
gfscsi°©us2
^4;

50 
sbô
 
	gg_bUN1Sèπ
 = 
gfscsi°©us2
^3;

51 
sbô
 
	gg_bUN2Sèπ
 = 
gfscsi°©us2
^2;

52 
sbô
 
	gg_bCDROMLUN
 = 
gfscsi°©us2
^1;

53 
sbô
 
	gg_bSëRemovabÀ
 = 
gfscsi°©us2
^0;

56 
d©a
 
UCHAR
 
	gg_ucCDROMSèπ
;

58 
id©a
 
UCHAR
 
	gg_ucCDROMLun
;

66 
uöt8
 
skeybuf„r
;

67 
uöt8
 
ascbuf„r
;

68 
uöt8
 
ascqbuf„r
;

69 
uöt8
 
îr‹Êag
;

71 
d©a
 
UCHAR
 
g_ucLUN
;

75 
BYTE
 vﬁ©ûê
d©a
 
gfscsi°©us1
;

76 
bô
 
g_bLun1MediumCh™ged
;

77 
bô
 
g_bLun0MediumCh™ged
;

78 
bô
 
g_bNŸRódy
;

79 
bô
 
g_bCDROME«bÀ
;

80 
bô
 
g_bCDROM2k
;

81 
bô
 
g_bCDBoŸ
;

82 
bô
 
g_bWrôePrŸe˘
;

83 
bô
 
g_bNextIsSu•íd
;

85 
BYTE
 vﬁ©ûê
d©a
 
gfscsi°©us2
;

86 
bô
 
g_bN‹mÆMode7
;

87 
bô
 
g_bTe°LED6
;

88 
bô
 
g_bRódPhysiˇl
;

89 
bô
 
g_bUN0Sèπ
;

90 
bô
 
g_bUN1Sèπ
;

91 
bô
 
g_bUN2Sèπ
;

92 
bô
 
g_bCDROMLUN
;

93 
bô
 
g_bSëRemovabÀ
;

96 
d©a
 
UCHAR
 
g_ucCDROMSèπ
;

98 
id©a
 
UCHAR
 
g_ucCDROMLun
;

104 
SëOEMInquúyD©a
();

105 
bô
 
IsCDROMLUN
();

106 
bô
 
IsLUNSèπ
();

108 
SCSICMD_Ród10
();

111 
SCSICMD_RódC≠acôy
();

112 
SëTx1Tøns„r
(
ucLígth
);

115 
SCSICMD_ModeSí£
();

116 
SCSICMD_Te°UnôRódy
();

117 
SCSICMD_GëTENXInfo
();

118 
SCSICMD_23
();

119 
SCSICMD_RódTOC
();

120 
SCSICMD_PªvítAMR
();

121 
SCSICMD_Reque°Sí£
();

123 
SET_SCSI_ERR_INVALID_COMM_OP_CODE
();

124 
SET_SCSI_ERR_MEDIUM_NOT_PRESENT
();

125 
SET_SCSI_ERR_INVALID_FIELD_IN_CDB
();

126 
SET_SCSI_MEDIA_CHANGE
();

129 
c›y_d©a_x2d©a_•
(
xd©a
 *
èrgë
,*
sour˚
,
BYTE
 
Àngth
);

130 
c›y_d©a_x2xb_•
(
xd©a
 *
èrgë
,xd©®*
sour˚
,
BYTE
 
Àngth
);

131 
c›y_code2xd©a
(
BYTE
 
xd©a
 *
èrgë
,BYTE 
code
 *
sour˚
,BYTE 
Àngth
);

132 
£tXømD©a
(
xRamHiAddªss
, 
ucSëD©a
, 
ucCou¡
);

134 
	#SCSI_INVALID_COMMMAND_CODE
 0x13

	)

135 
	#SCSI_INVALID_FIELD_IN_COMMMAND_PACKET
 0x15

	)

136 
	#SCSI_STATUS_MEDIA_CHANGE
 0x1b

	)

137 
	#SCSI_STATUS_NO_MEDIA
 0x21

	)

	@USBtran.h

1 #i‚de‡
_USBTRAN_H


2 
	#_USBTRAN_H


	)

5 
	#bmReque°Ty≥
 0

	)

6 
	#bReque°
 1

	)

7 
	#wVÆue
 2

	)

8 
	#wVÆueHi
 3

	)

9 
	#wIndex
 4

	)

10 
	#wIndexHi
 5

	)

11 
	#wLígth
 6

	)

12 
	#wLígthHi
 7

	)

15 
	#CONFIGURED
 0x01

	)

16 
	#UNCONFIGURED
 0x00

	)

19 
	#USB_GET_STATUS
 0x00

	)

20 
	#USB_CLEAR_FEATURE
 0x01

	)

21 
	#USB_SET_FEATURE
 0x03

	)

22 
	#USB_SET_ADDRESS
 0x05

	)

23 
	#USB_GET_DESCRIPTOR
 0x06

	)

24 
	#USB_SET_DESCRIPTOR
 0x07

	)

25 
	#USB_GET_CONFIGURATION
 0x08

	)

26 
	#USB_SET_CONFIGURATION
 0x09

	)

27 
	#USB_GET_INTERFACE
 0x0A

	)

28 
	#USB_SET_INTERFACE
 0x0B

	)

29 
	#USB_SYNCH_FRAME
 0x0C

	)

34 
	#HOST_TO_DEVICE
 0x00

35 
	#DEVICE_TO_HOST
 0x80

36 
	#STANDARD
 0x00

37 
	#CLASS
 0x20

38 
	#VENDOR
 0x40

39 
	#DEVICE
 0x00

40 
	#INTERFACE
 0x01

41 
	#ENDPOINT
 0x02

42 
	#OTHER
 0x03

43 

	)

45 
	#USB_DEVICE
 0x01

	)

46 
	#USB_CONFIGURATION
 0x02

	)

47 
	#USB_STRING
 0x03

	)

48 
	#USB_INTERFACE
 0x04

	)

49 
	#USB_ENDPOINT
 0x05

	)

52 
	#USB_HidCœss
 0x21

	)

53 
	#USB_HidRï‹t
 0x22

	)

57 
	#USB_ENDPOINT_STALL
 0x00

	)

58 
	#USB_DEVICE_REMOTE_WAKEUP
 0x01

	)

59 
	#USB_TEST_MODE
 0x02

	)

63 
	#DEVICE_STATUS_CONFIGURED
 0x30

	)

64 
	#DEVICE_STATUS_EP4_STALL
 0x10

	)

65 
	#DEVICE_STATUS_EP3_STALL
 0x08

	)

66 
	#DEVICE_STATUS_EP2_STALL
 0x04

	)

67 
	#DEVICE_STATUS_EP1_STALL
 0x02

	)

68 
	#DEVICE_STATUS_EP0_STALL
 0x01

	)

70 
	#DEVICE_STATUS_ANDMASK_UNCONFIGURED
 0xcf

	)

71 
	#DEVICE_STATUS_ANDMASK_EP4_UNSTALL
 0xEF

	)

72 
	#DEVICE_STATUS_ANDMASK_EP3_UNSTALL
 0xf7

	)

73 
	#DEVICE_STATUS_ANDMASK_EP2_UNSTALL
 0xfb

	)

74 
	#DEVICE_STATUS_ANDMASK_EP1_UNSTALL
 0xfd

	)

75 
	#DEVICE_STATUS_ANDMASK_EP0_UNSTALL
 0x„

	)

78 
	#GëRï‹t
 0x01

	)

79 
	#GëIdÀ
 0x02

	)

80 
	#GëPrŸocﬁ
 0x03

	)

82 
	#SëRï‹t
 0x09

	)

83 
	#SëIdÀ
 0x0a

	)

84 
	#SëPrŸocﬁ
 0x0b

	)

86 
	#LedVÆue
 0x02

	)

87 
	#UnC⁄fig
 0x00

	)

88 
	#C⁄fig
 0x01

	)

92 
	#SET_CUR
 0x01

	)

93 
	#SET_MIN
 0x02

	)

94 
	#SET_MAX
 0x03

	)

95 
	#SET_RES
 0x04

	)

96 
	#GET_CUR
 0x81

	)

97 
	#GET_MIN
 0x82

	)

98 
	#GET_MAX
 0x83

	)

99 
	#GET_RES
 0x84

	)

101 
	#USB_GET_MAX_LUN
 0x„

	)

102 
	#USB_BULK_ONLY_RESET
 0xff

	)

103 
	#MAX_PACKET_SIZE
 0x08

	)

105 
	#USB_RAM0
 0x0

	)

106 
	#USB_RAM1
 0x1

	)

107 
	#USB_RAM2
 0x0

	)

108 
	#USB_RAM3
 0x1

	)

111 
UsbInôülize
();

112 
usbBusRe£t
();

113 
Su•íd
();

114 
USB_Resume
();

115 
Ch™gToFa°Mode
();

116 
öôM51CålRegs
();

117 
Inô_SPIB
();

120 
EP0_SëupH™dÀr
();

122 
Ep0Out
();

124 
EP0_H™dÀSëup
();

125 
EP0_SëupRe•⁄£
();

126 
EP0_LﬂdFIFO
();

127 
EP0_TønsmôSëup
(
UCHAR
 
ucCou¡
);

129 
EP0_Re˚ive_Ródy
();

130 
EP0SëupTask
();

136 
GëDes¸ùt‹
();

137 
SëAddªss
();

138 
GëSètus
();

139 
CÀ¨Fótuª
();

140 
SëFótuª
();

141 
GëC⁄figuøti⁄
();

142 
SëC⁄figuøti⁄
();

143 
GëI¡îÁ˚
();

144 
SëI¡îÁ˚
();

145 
NŸSuµ‹ãd
();

146 
SëReque°
();

148 
SëupComm™d
();

151 
BULK_EP1H™dÀr
();

154 
BULK_EP2H™dÀr
();

160 
Tm0iTask
();

161 
USB_REQUEST_GëReque°
();

162 
USB_REQUEST_SëReque°
();

163 
PﬁlögUsbComm™d
();

164 
xM_EP0SèπX„r
();

	@eeprom.c

1 
	~<ì¥om.h
>

2 
	~"maö.h
"

3 
	~"iic.h
"

18 
	$mdñay
(
ti
)

20 
i
,
j
;

21 
i
=0; i < 255; i++) {

22 
j
 = 0; j < 
ti
; j++);

24 
	}
}

34 
	$£nd_hódî
(
ì¥om_if
 *
dev_if
)

36 
tŸÆÀn
;

37 
off£t
;

39 
tŸÆÀn
 = 
dev_if
->totallen;

40 
off£t
 = 
dev_if
->offset;

42 i‡((
tŸÆÀn
 >> 11 == 0) && (totallen & 0x70))

43 
dev_if
->
devaddr
 |(dev_if->
off£t
 >> 8);

45 
	`IIC_Sèπ
();

49 
	`IIC_SídByã
(
dev_if
->
devaddr
);

51 i‡(
	`IIC_ChkAck
())

52 
îr1
;

55 i‡(
tŸÆÀn
 >> 11) {

56 
	`IIC_SídByã
(
off£t
 >> 8);

57 i‡(
	`IIC_ChkAck
())

58 
îr1
;

62 
	`IIC_SídByã
(()
off£t
);

63 i‡(
	`IIC_ChkAck
())

64 
îr1
;

65  
EEPROM_RDWR_OK
;

67 
îr1
:

68 
	`IIC_St›
();

69  
EEPROM_ACK_ERR
;

70 
	}
}

77 
	$ì¥om_wrôe
(
ì¥om_if
 *
dev_if
)

79 
tŸÆÀn
;

80 
off£t
;

81 
cou¡
;

82 
∑ge_size
;

83 
√xt_∑ge
;

84 
ãmp
;

86 
tŸÆÀn
 = 
dev_if
->totallen;

87 
off£t
 = 
dev_if
->offset;

88 
cou¡
 = 
dev_if
->count;

89 
∑ge_size
 = 
dev_if
->page_size;

90 
∑ge_size
) {

92 
ãmp
 = 3;

95 
ãmp
 = 4;

98 
ãmp
 = 5;

101 
ãmp
 = 6;

104 
ãmp
 = 3;

108 
√xt_∑ge
 = (
off£t
 + 
∑ge_size
Ë>> 
ãmp
;

109 
√xt_∑ge
 <<
ãmp
;

111 i‡((
off£t
 + 
cou¡
Ë> 
√xt_∑ge
)

112 
cou¡
 = 
√xt_∑ge
 - 
off£t
;

115 i‡(
	`£nd_hódî
(
dev_if
Ë=
EEPROM_ACK_ERR
) {

116 
îr_iic
;

119 i‡(
	`IIC_SídByãs
(
dev_if
->
±r
, 
cou¡
Ë=
EEPROM_ACK_ERR
) {

120 
îr_iic
;

123 
	`IIC_St›
();

125 
dev_if
->
±r
 +
cou¡
;

126 
dev_if
->
off£t
 +
cou¡
;

127 
dev_if
->
cou¡
 -= count;

128 
	`mdñay
(5);

129  
EEPROM_RDWR_OK
;

131 
îr_iic
:

132 
	`IIC_St›
();

133  
EEPROM_ACK_ERR
;

135 
	}
}

137 
	$ì¥om_ªad
(
ì¥om_if
 *
dev_if
)

139 
cou¡
;

140 
off£t
;

141 
tŸÆÀn
;

143 
off£t
 = 
dev_if
->offset;

144 
tŸÆÀn
 = 
dev_if
->totallen;

145 
cou¡
 = 
dev_if
->count;

147 i‡(
dev_if
->
cou¡
 > 64 )

148 
cou¡
 = 64;

150 i‡((
off£t
 + 
cou¡
Ë> 
tŸÆÀn
)

151 
cou¡
 = 
tŸÆÀn
 - 
off£t
;

153 i‡(
	`£nd_hódî
(
dev_if
Ë=
EEPROM_ACK_ERR
) {

154 
îr_iic
;

157 
	`IIC_RïóãdSèπ
();

160 
	`IIC_SídByã
(
dev_if
->
devaddr
 | 0x01);

162 i‡(
	`IIC_ChkAck
()) {

163 
îr_iic
;

166 
	`IIC_RódByãs
(
dev_if
->
±r
, 
cou¡
);

167 
	`IIC_St›
();

169 
dev_if
->
cou¡
 -= count;

170 
dev_if
->
±r
 +
cou¡
;

173 
îr_iic
:

174 
	`IIC_St›
();

175  
EEPROM_ACK_ERR
;

176 
	}
}

	@eeprom.h

1 #i‚de‡
__EEPROM__H


2 
	#__EEPROM__H


	)

4 
	sì¥om_if
 {

5 * 
	m±r
;

6 
	moff£t
;

7 
	mcou¡
;

14 
	mÊag
;

15 
	mtŸÆÀn
;

16 
	mdevaddr
;

17 
	m∑ge_size
;

18 
	musb_å™s_∑ckës
;

19 
	ma˘i⁄
;

21 
	#PAGE_SIZE_MASK
 (0x‡<< 4)

	)

22 
	#PAGE_SIZE_8_FLAG
 (0x3 << 4)

	)

23 
	#PAGE_SIZE_16_FLAG
 (0x4 << 4)

	)

25 
	#DEVICE_RDWR_MASK
 (0X01 << 0)

	)

26 
	#DEVICE_RD_FLAG
 (0X01 << 0)

	)

27 
	#DEVICE_WR_FLAG
 (0X01 << 0)

	)

29 
	#DEVICE_TIMEOUT_MASK
 (0X3 << 1)

	)

30 
	#DEVICE_TIMEOUT_0
 (0X0 << 1)

	)

31 
	#DEVICE_TIMEOUT_1
 (0X1 << 1)

	)

32 
	#DEVICE_TIMEOUT_2
 (0X2 << 1)

	)

33 
	#DEVICE_TIMEOUT_3
 (0X3 << 1)

	)

35 
	#DEVICE_OP_MASK
 (0x1 << 3)

	)

36 
	#DEVICE_OP_ERR
 (0X1 << 3)

	)

38 
	#DEVICE_CFG_MASK
 (0x1 << 7)

	)

39 
	#DEVICE_CFG
 (0X1 << 7)

	)

41 
ì¥om_wrôe
(
ì¥om_if
 *
dev_if
);

42 
ì¥om_ªad
(
ì¥om_if
 *
dev_if
);

	@global.h

2 #ifde‡
MAIN_C


3 
DWORD
 
d©a
 
	ggb_uiMacOff£t
;

4 
DWORD
 
d©a
 
	ggb_uiWö32Off£t
;

5 
DWORD
 
d©a
 
	ggb_uiCDROMOff£t
;

6 
BYTE
 
id©a
 
	ggb_UsbUßgeTemp
;

10 
BYTE
 
d©a
 
	ggbI¡0IE
;

11 
BYTE
 
d©a
 
	ggbI¡1IE
;

12 
BYTE
 
d©a
 
	ggbTimîC¡
;

13 
BYTE
 
d©a
 
	ggfSCSICmdSètus
;

14 
BYTE
 
d©a
 
	ggfTe°unô˙t
;

17 
BYTE
 
d©a
 
	ggbPWMãmp
;

18 
bô
 
	gbEP0x„rD⁄e
;

19 
bô
 
	gbD©aOutFœg
;

21 
bô
 
	ggfUSBInôEND
;

24 
bô
 
	ggfUSEöôGëDes¸ùt‹
;

25 
bô
 
	ggfMSCvÆid
;

29 
DWORD
 
d©a
 
gb_uiMacOff£t
;

30 
DWORD
 
d©a
 
gb_uiWö32Off£t
;

31 
DWORD
 
d©a
 
gb_uiCDROMOff£t
;

32 
BYTE
 
id©a
 
gb_UsbUßgeTemp
;

36 
BYTE
 
d©a
 
gbI¡0IE
;

37 
BYTE
 
d©a
 
gbI¡1IE
;

38 
BYTE
 
d©a
 
gbTimîC¡
;

39 
BYTE
 
d©a
 
gfSCSICmdSètus
;

40 
BYTE
 
d©a
 
gfTe°unô˙t
;

45 
bô
 
bEP0x„rD⁄e
;

46 
bô
 
bD©aOutFœg
;

48 
bô
 
gfUSBInôEND
;

51 
bô
 
gfUSEöôGëDes¸ùt‹
;

52 
bô
 
gfMSCvÆid
;

58 #ifde‡
_Usbå™_C


59 
XMT
 
	gXmtBuff
;

60 
BYTE
 
id©a
 
	gtx0_d©a_tgl
;

61 
BYTE
 
id©a
 
	gg_ucBuf„r
[2];

62 
BYTE
 
d©a
 
	gbyI¡0SètusA
;

63 
BYTE
 
d©a
 
	gbyI¡0SètusB
;

64 
BYTE
 
id©a
 
	gbyI¡1Sètus
;

65 
BYTE
 
id©a
 
	gucC⁄figuøti⁄Sètus
;

66 
BYTE
 
d©a
 
	gucHidPrŸocﬁSètus
;

67 
BYTE
 
d©a
 
	gucIdÀPîiodSètus
;

68 
BYTE
 
id©a
 
	gucIdÀPîiodTemp
;

69 
BYTE
 
id©a
 
	gucRemŸeWakeupSètus
;

70 
BYTE
 
id©a
 
	gucCurA…î«ã
;

71 
BYTE
 
id©a
 
	gucCurA…î«ãTabÀ
[2];

72 
BYTE
 
d©a
 
	ggb_ucAœrmP
;

73 
BYTE
 
id©a
 
	gbyUSBAddr
;

74 
BYTE
 
d©a
 
	gucHID°©us
;

77 
BYTE
 
d©a
 
	ggcEø£FœshBusy
;

78 
DWORD
 
d©a
 
	ggbRódWrôeC¡
;

79 
DWORD
 
d©a
 
	gwSe˘‹Addr
;

80 
DWORD
 
d©a
 
	gucD©aPackëC¡
;

86 
XMT
 
XmtBuff
;

87 
BYTE
 
id©a
 
tx0_d©a_tgl
;

88 
BYTE
 
id©a
 
g_ucBuf„r
[2];

89 
BYTE
 
d©a
 
byI¡0SètusA
;

90 
BYTE
 
d©a
 
byI¡0SètusB
;

91 
BYTE
 
id©a
 
byI¡1Sètus
;

92 
BYTE
 
id©a
 
ucC⁄figuøti⁄Sètus
;

93 
BYTE
 
d©a
 
ucHidPrŸocﬁSètus
;

94 
BYTE
 
id©a
 
ucIdÀPîiodSètus
;

95 
BYTE
 
id©a
 
ucIdÀPîiodTemp
;

96 
BYTE
 
id©a
 
ucRemŸeWakeupSètus
;

97 
BYTE
 
id©a
 
ucCurA…î«ã
;

98 
BYTE
 
id©a
 
ucCurA…î«ãTabÀ
[2];

99 
BYTE
 
id©a
 
byUSBAddr
;

100 
BYTE
 
d©a
 
gb_ucAœrmP
;

101 
BYTE
 
d©a
 
ucHID°©us
;

104 
BYTE
 
d©a
 
gcEø£FœshBusy
;

105 
DWORD
 
d©a
 
gbRódWrôeC¡
;

106 
DWORD
 
d©a
 
wSe˘‹Addr
;

107 
DWORD
 
d©a
 
ucD©aPackëC¡
;

117 #ifde‡
_ISR_C


118 
BYTE
 
d©a
 
	ggbI¡0Sètus
;

119 
BYTE
 
d©a
 
	ggbI¡1Sètus
;

120 
BYTE
 
id©a
 
	ggbUsbAddr
;

121 
BYTE
 
bd©a
 
	gI¡CålFœg
;

122 
sbô
 
	ggfRc0Fœg
 = 
I¡CålFœg
^7;

123 
sbô
 
	ggfTx0Fœg
 = 
I¡CålFœg
^6;

124 
sbô
 
	ggfSëAddªss
 = 
I¡CålFœg
^5;

125 
sbô
 
	ggfOut0Fœg
 = 
I¡CålFœg
^4;

127 
sbô
 
	ggfTx3Fœg
 = 
I¡CålFœg
^2;

128 
sbô
 
	ggfRC2Fœg
 = 
I¡CålFœg
^1;

129 
sbô
 
	ggfTx1Fœg
 = 
I¡CålFœg
^0;

137 
bô
 
	ggfRe£tFœg
;

139 
bô
 
	ggfResume
;

140 
bô
 
	ggfFa°ModeÊag
;

142 
bô
 
	ggfSu•íd
;

143 
bô
 
	ggfTimeOut
;

144 
bô
 
	ggf5VDDFœg
;

146 
bô
 
	ggfTx1RAMFœg
;

147 
bô
 
	ggfBulkX„rD⁄e
;

149 
bô
 
	ggfI¡îΩtX„rD⁄e
;

151 
bô
 
	ggfE¡ryGëC⁄fig
;

152 
bô
 
	ggfRc4Fœg
;

154 
bô
 
	ggfMAC
;

155 
bô
 
	ggfE¡rySu•íd
;

160 
BYTE
 
d©a
 
gbI¡0Sètus
;

161 
BYTE
 
d©a
 
gbI¡1Sètus
;

162 
BYTE
 
id©a
 
gbUsbAddr
;

165 
BYTE
 
bd©a
 
I¡CålFœg
;

166 
BYTE
 
bd©a
 
I¡CålFœg
;

167 
bô
 
gfRc0Fœg
;

168 
bô
 
gfTx0Fœg
;

169 
bô
 
gfSëAddªss
;

170 
bô
 
gfOut0Fœg
;

172 
bô
 
gfTx3Fœg
;

173 
bô
 
gfRC2Fœg
;

174 
bô
 
gfTx1Fœg
;

178 
bô
 
gf0x12
;

179 
bô
 
gf0x25
;

180 
bô
 
gf0x28
;

181 
bô
 
gf0x5a
;

182 
bô
 
gf0x1a
;

183 
bô
 
gfRe£tFœg
;

185 
bô
 
gfResume
;

186 
bô
 
gfFa°ModeÊag
;

188 
bô
 
gfSu•íd
;

189 
bô
 
gfTimeOut
;

190 
bô
 
gf5VDDFœg
;

193 
bô
 
gfTx1RAMFœg
;

194 
bô
 
gfBulkX„rD⁄e
;

195 
bô
 
gfI¡îΩtX„rD⁄e
;

196 
bô
 
gfE¡ryGëC⁄fig
;

197 
bô
 
gfE¡rySu•íd
;

198 
bô
 
gfMAC
;

199 
bô
 
gfRc4Fœg
;

204 
	#FLASH
 1

	)

205 
	#ROM
 0

	)

208 
	#_ACTIVE_WINBOND_FLASH_


	)

210 
	#CBW_À¡h
 (*(
DWORD
 vﬁ©ûê
xd©a
 *)(
REG1630_XRAM2
+8))

	)

211 
	#CBW_Àn0
 (*(
BYTE
 
xd©a
 *)(
CBW_À¡h
))

	)

212 
	#CBW_Àn1
 (*(
BYTE
 
xd©a
 *)(
CBW_À¡h
+1))

	)

213 
	#CBW_Àn2
 (*(
BYTE
 
xd©a
 *)(
CBW_À¡h
+2))

	)

214 
	#CBW_Àn3
 (*(
BYTE
 
xd©a
 *)(
CBW_À¡h
+3))

	)

216 
	#INFO_FATaddr
 32

	)

217 
	#INFO_£âögaddr
 33

	)

218 
	#INFO_ãnxInfo_SèπAddªss
 48

219 
	#INFO_LCMd©a
 49

	)

222 
	#OEM_Víd‹
 12

	)

225 
	#OEM_MacOff£t
 16

226 
	#OEM_Wö32Off£t
 8

227 
	#OEM_CDROMOff£t
 0

230 
	#ISO_START
 0x00100

232 

	)

234 
	#PicSèπPage
 0xc00

235 

	)

	@iic.c

2 
	~"maö.h
"

3 
	~"öcfûe.h
"

4 
	~"iic.h
"

6 
	#IIC_USE_51


	)

7 
	#IIC_USE_TENX


	)

9 
sbô
 
	gMS_SENSOR_SCK
=
P1
^1;

10 
sbô
 
	gMS_SENSOR_SDA
=
P1
^0;

12 
	#SET_I2C_CLK_OUTPUT
 
MS_SENSOR_SCK
 = 1

	)

13 
	#SET_I2C_CLK_HIGH
 
MS_SENSOR_SCK
 = 1

	)

14 
	#SET_I2C_CLK_LOW
 
MS_SENSOR_SCK
 = 0

	)

16 
	#SET_I2C_DATA_OUTPUT
 
MS_SENSOR_SDA
 = 1

	)

17 
	#SET_I2C_DATA_INPUT
 
MS_SENSOR_SDA
 = 1

	)

18 
	#SET_I2C_DATA_HIGH
 
MS_SENSOR_SDA
 = 1

	)

19 
	#SET_I2C_DATA_LOW
 
MS_SENSOR_SDA
 = 0

	)

20 
	#GET_I2C_DATA_BIT
 
	`GPIO_READ
()

	)

24 
	#SET_I2C_CLK_OUTPUT
 
SET_GPIO_PA5


	)

25 
	#SET_I2C_CLK_HIGH
 
SET_PA5


	)

26 
	#SET_I2C_CLK_LOW
 
CLR_PA5


	)

28 
	#SET_I2C_DATA_OUTPUT
 
SET_GPIO_PA4


	)

29 
	#SET_I2C_DATA_INPUT
 
SET_PA4


	)

30 
	#SET_I2C_DATA_HIGH
 
SET_PA4


	)

31 
	#SET_I2C_DATA_LOW
 
CLR_PA4


	)

32 
	#GET_I2C_DATA_BIT
 
	`GPIO_READ
()

	)

35 
	#Dñay20us
 0

36 
	#Dñay10us
 0

37 
	#Dñay5us
 0

38 
	#Dñay2p5us
 0

39 

	)

41 
	$GPIO_READ
()

43 
SET_PA4
;

44 i‡(
REG1630_PA_GPIO_9A
 & 0x10) {

48 
	}
}

51 
	$GPIO_ModeSëup
(
bô
 
gpio
, 
mode
)

54 
	}
}

57 
	$mma_dñay
(
time
)

59 
i
;

60 
i
=0; i<
time
; i++);

61 
	}
}

63 
	$IIC_Inô
()

66 
SET_I2C_CLK_OUTPUT
;

68 
SET_I2C_CLK_HIGH
;

71 
SET_I2C_DATA_OUTPUT
;

72 
SET_I2C_DATA_HIGH
;

73 
	}
}

79 
	$IIC_Sèπ
()

82 
SET_I2C_CLK_OUTPUT
;

84 
SET_I2C_DATA_OUTPUT
;

86 
SET_I2C_DATA_HIGH
;

87 
SET_I2C_CLK_HIGH
;

88 
	`mma_dñay
(
Dñay20us
);

89 
SET_I2C_DATA_LOW
;

90 
	`mma_dñay
(
Dñay10us
);

91 
SET_I2C_CLK_LOW
;

92 
	`mma_dñay
(
Dñay10us
);

93 
	}
}

95 
	$IIC_St›
 ()

97 
	`mma_dñay
(
Dñay10us
);

98 
SET_I2C_CLK_HIGH
;

99 
	`mma_dñay
(
Dñay10us
);

100 
SET_I2C_DATA_HIGH
;

101 
	}
}

113 
	$IIC_RïóãdSèπ
()

115 
	`mma_dñay
(
Dñay20us
);

116 
	`mma_dñay
(
Dñay20us
);

117 
SET_I2C_DATA_HIGH
;

118 
	`mma_dñay
(
Dñay10us
);

119 
SET_I2C_CLK_HIGH
;

120 
	`mma_dñay
(
Dñay20us
);

121 
	`mma_dñay
(
Dñay20us
);

122 
SET_I2C_DATA_LOW
;

123 
	`mma_dñay
(
Dñay10us
);

124 
SET_I2C_CLK_LOW
;

125 
	`mma_dñay
(
Dñay10us
);

126 
	}
}

132 
	$IIC_O√Clk
()

134 
	`mma_dñay
(
Dñay5us
);

135 
SET_I2C_CLK_HIGH
;

136 
	`mma_dñay
(
Dñay10us
);

137 
SET_I2C_CLK_LOW
;

138 
	`mma_dñay
(
Dñay5us
);

139 
	}
}

154 
	$IIC_ChkAck
()

156 
SET_I2C_DATA_INPUT
;

157 
	`mma_dñay
(
Dñay5us
);

158 
SET_I2C_CLK_HIGH
;

159 
	`mma_dñay
(
Dñay5us
);

160 i‡(
GET_I2C_DATA_BIT
) {

161 
	`mma_dñay
(
Dñay5us
);

162 
SET_I2C_CLK_LOW
;

163 
	`mma_dñay
(
Dñay5us
);

164 
SET_I2C_DATA_OUTPUT
;

165 
SET_I2C_DATA_LOW
;

168 
	`mma_dñay
(
Dñay5us
);

169 
SET_I2C_CLK_LOW
;

170 
	`mma_dñay
(
Dñay5us
);

171 
SET_I2C_DATA_OUTPUT
;

172 
SET_I2C_DATA_LOW
;

175 
	}
}

182 
	$IIC_RódByãACK
()

184 
i
;

185 
d©
;

187 
SET_I2C_DATA_INPUT
;

188 
d©
 = 0;

189 
i
=7; i>=0; i--) {

190 i‡(
GET_I2C_DATA_BIT
)

191 
d©
 |(0x01<<
i
);

192 
	`IIC_O√Clk
();

195 
SET_I2C_DATA_OUTPUT
;

196 
SET_I2C_DATA_LOW
;

197 
	`IIC_O√Clk
();

199  
d©
;

200 
	}
}

206 
	$IIC_RódByãNCK
()

208 
i
;

209 
d©
;

211 
SET_I2C_DATA_INPUT
;

212 
d©
 = 0;

213 
i
=7; i>=0; i--) {

214 i‡(
GET_I2C_DATA_BIT
Ë
d©
 |(0x01<<
i
);

215 
	`IIC_O√Clk
();

218 
SET_I2C_DATA_OUTPUT
;

219 
SET_I2C_DATA_HIGH
;

220 
	`IIC_O√Clk
();

221 
SET_I2C_DATA_LOW
;

223  
d©
;

224 
	}
}

235 
	$IIC_SídByã
(
sD©a
)

237 
i
;

238 
i
=7; i>=0; i--) {

239 i‡((
sD©a
>>
i
)&0x01) {

240 
SET_I2C_DATA_HIGH
;

242 
SET_I2C_DATA_LOW
;

244 
	`IIC_O√Clk
();

246 
	}
}

248 
	$IIC_SídByãs
(
kÆ_uöt8
 *
pD©a
, 
Àn
)

250 
i
;

251 
i
 = 0; i < 
Àn
; i++) {

252 
	`IIC_SídByã
(
pD©a
[
i
]);

253 i‡(
	`IIC_ChkAck
()) {

254 
	`IIC_St›
();

255  
EEPROM_ACK_ERR
;

258  
EEPROM_RDWR_OK
;

259 
	}
}

261 
	$IIC_RódByãs
(
kÆ_uöt8
 *
pD©a
, 
Àn
)

263 
i
;

264 
i
=0; i<(
Àn
-1); i++)

265 
pD©a
[
i
] = 
	`IIC_RódByãACK
();

267 
pD©a
[
Àn
-1] = 
	`IIC_RódByãNCK
();

269 
	}
}

	@iic.h

1 #i‚de‡
__IIC__H__


2 
	#__IIC__H__


	)

4 
	#EEPROM_ACK_ERR
 0x00

	)

5 
	#EEPROM_RDWR_OK
 0x01

	)

6 
	#EEPROM_HEAD_ERR
 0xFC

	)

8 
IIC_Inô
();

9 
IIC_Sèπ
();

10 
IIC_St›
 ();

11 
IIC_RïóãdSèπ
();

12 
IIC_O√Clk
();

13 
IIC_SídByã
(
sD©a
);

14 
IIC_SídByãs
(*
pD©a
, 
Àn
);

15 
IIC_RódByãs
(*
pD©a
, 
Àn
);

16 
IIC_ChkAck
();

17 
IIC_RódByãACK
();

18 
IIC_RódByãNCK
();

	@iicbridge.c

1 
	~"öcfûe.h
"

2 
	~"ì¥om.h
"

3 
	#USB_CFG_IIC
 0xe4

	)

4 
	#USB_READ_IIC
 0xe2

	)

5 
	#USB_WRITE_IIC
 0xe3

	)

6 
	#USB_GET_STATUS_IIC
 0xe5

	)

7 
	#USB_TEST_IIC
 0xe6

	)

9 
ì¥om_if
 
dev_if
;

11 
	$SëTx3Tøns„r
(
d©a_Àngth
)

13 
ucToggÀ
;

14 
REG1630_TX3_CNT
 = 
d©a_Àngth
;

15 
ucToggÀ
 = 
REG1630_TX3
;

16 
ucToggÀ
^=
EP3_TGL
;

17 
REG1630_TX3
 = 
ucToggÀ
;

20 
SET_XRAMAUSB
;

21 
SET_TX3_RDY
;

24 
	}
}

26 
	$INTERRUPT_EP0H™dÀr
()

28 
REG1630_OUT0_FIFO
[7]) {

29 
USB_READ_IIC
:

30 i‡(
dev_if
.
Êag
 & 0x80) {

31 
dev_if
.
off£t
 = 
REG1630_OUT0_FIFO
[0] | (REG1630_OUT0_FIFO[1] << 8);

32 
dev_if
.
cou¡
 = 
REG1630_OUT0_FIFO
[2] | (REG1630_OUT0_FIFO[3] << 8);

33 
dev_if
.
Êag
 |
DEVICE_RD_FLAG
;

34 
dev_if
.
Êag
 &~
DEVICE_OP_ERR
;

36 
dev_if
.
±r
 = 
REG1630_XRAMA
;

37 
dev_if
.
usb_å™s_∑ckës
 = 0;

38 
dev_if
.
a˘i⁄
 = 1;

42 
USB_WRITE_IIC
:

43 i‡(
dev_if
.
Êag
 & 0x80) {

44 
dev_if
.
off£t
 = 
REG1630_OUT0_FIFO
[0] | (REG1630_OUT0_FIFO[1] << 8);

45 
dev_if
.
cou¡
 = 
REG1630_OUT0_FIFO
[2] | (REG1630_OUT0_FIFO[3] << 8);

46 
dev_if
.
Êag
 |
DEVICE_WR_FLAG
;

47 
dev_if
.
Êag
 &~
DEVICE_OP_ERR
;

49 
dev_if
.
±r
 = 
REG1630_XRAMB
;

50 
dev_if
.
usb_å™s_∑ckës
 = 0;

52 
SET_XRAMBUSB
;

53 
SET_RC4_RDY
;

57 
USB_CFG_IIC
:

58 
dev_if
.
devaddr
 = 
REG1630_OUT0_FIFO
[0];

60 
dev_if
.
∑ge_size
 = 
REG1630_OUT0_FIFO
[1];

62 
dev_if
.
tŸÆÀn
 = 
REG1630_OUT0_FIFO
[2] | (REG1630_OUT0_FIFO[3] << 8);

64 
dev_if
.
Êag
 = 
DEVICE_CFG
 | 
DEVICE_TIMEOUT_2
;

66 
dev_if
.
usb_å™s_∑ckës
 = 0;

67 
dev_if
.
off£t
 = 0;

68 
dev_if
.
cou¡
 = 0;

69 
dev_if
.
±r
 = 0;

72 
USB_GET_STATUS_IIC
:

73 i‡(
dev_if
.
a˘i⁄
 == 1) {

74 
dev_if
.
a˘i⁄
 = 0;

76 
REG1630_XRAMA
[0] = 
dev_if
.
Êag
;

77 
	`SëTx3Tøns„r
(64);

80 
USB_TEST_IIC
:

89 
	}
}

95 
	$usb_ªadiic_h™dÀ
()

97 
cur_cou¡
;

98 
ªt
;

99 
timeout
;

100 
timeout
 = (
dev_if
.
Êag
 >>1) & 0x07;

102 i‡((
dev_if
.
a˘i⁄
 =1Ë&& (dev_if.
Êag
 & 
DEVICE_RD_FLAG
)) {

103 
dev_if
.
a˘i⁄
 = 0;

104 i‡(
dev_if
.
cou¡
 == 0) {

105 
dev_if
.
Êag
 &~
DEVICE_RD_FLAG
;

109 
CLR_XRAMAUSB
;

110 i‡(
dev_if
.
cou¡
 > 64) {

112 
ªt
 = 
	`ì¥om_ªad
(&
dev_if
);

113 i‡(
ªt
)

115 } 
timeout
--);

116 i‡(!
timeout
) {

117 
dev_if
.
Êag
 |
DEVICE_OP_ERR
;

118 
dev_if
.
a˘i⁄
 = 0;

121 
cur_cou¡
 = 64;

123 
cur_cou¡
 = 
dev_if
.
cou¡
;

125 
ªt
 = 
	`ì¥om_ªad
(&
dev_if
);

126 i‡(
ªt
) {

127 
dev_if
.
a˘i⁄
 = 0;

130 } 
timeout
--);

131 i‡(!
timeout
) {

132 
dev_if
.
Êag
 |
DEVICE_OP_ERR
;

133 
dev_if
.
a˘i⁄
 = 0;

136 
dev_if
.
Êag
 &~
DEVICE_RD_FLAG
;

139 
REG1630_TX3
 & 0x20);

142 
dev_if
.
usb_å™s_∑ckës
++;

146 
	}
}

148 
	$usb_wrôeiic_h™dÀ
()

150 
cur_cou¡
;

151 
timeout
;

152 
timeout
 = (
dev_if
.
Êag
 >>1) & 0x07;

153 i‡((
dev_if
.
a˘i⁄
 =1Ë&& (dev_if.
Êag
 & 
DEVICE_WR_FLAG
)) {

154 
dev_if
.
a˘i⁄
 = 0;

156 
CLR_RC4_RDY
;

157 
CLR_XRAMBUSB
;

159 i‡(
dev_if
.
cou¡
 > 64) {

160 
cur_cou¡
 = 
dev_if
.
cou¡
;

161 
cur_cou¡
 - 
dev_if
.
cou¡
 < 64) {

163 if(
	`ì¥om_wrôe
(&
dev_if
))

165 } 
timeout
--);

167 i‡(!
timeout
) {

168 
dev_if
.
Êag
 |
DEVICE_OP_ERR
;

169 
dev_if
.
a˘i⁄
 = 0;

173 
dev_if
.
±r
 -= 64;

175 
cur_cou¡
 = 
dev_if
.
cou¡
;

176 
dev_if
.
cou¡
 > 0) {

178 if(
	`ì¥om_wrôe
(&
dev_if
))

180 } 
timeout
--);

182 i‡(!
timeout
) {

183 
dev_if
.
Êag
 |
DEVICE_OP_ERR
;

184 
dev_if
.
a˘i⁄
 = 0;

188 
dev_if
.
±r
 -
cur_cou¡
;

192 
SET_XRAMBUSB
;

193 
SET_RC4_RDY
;

194 
dev_if
.
usb_å™s_∑ckës
++;

198 
	}
}

	@iicbridge.h

1 #i‚de‡
__IICBRIDGE_H__


2 
	#__IICBRIDGE_H__


	)

4 
usb_ªadiic_h™dÀ
();

5 
usb_wrôeiic_h™dÀ
();

	@inttran.h

1 
	#INT_bCBWSIGNATURE
 0x55534243

	)

2 
	#INT_SECTOR_ERASE
 0xf1

3 
	#INT_SECTOR4K_ERASE
 0xf2

4 
	#INT_READ_DATA_BY_SECTOR
 0xf3

5 
	#INT_WRITE_DATA
 0xf4

6 
	#INT_GET_STATUS
 0xf5

	)

8 
	#INT_CBW_OPERATION_CODE
 6

	)

10 
	#VIDPID
 0X11306807

	)

11 
Do_ãnxIdítifyCheck
();

12 
INTERRUPT_EP0H™dÀr
();

13 
RódBySe˘‹
(
DWORD
 
ãmpSe˘‹Addr
);

14 
WrôeBySe˘‹
();

15 
Eø£BySe˘‹
(
DWORD
 
ãmpADDR
);

16 
SëTx3Tøns„r
();

17 
Eø£BySe˘‹4K
(
DWORD
 
ãmpADDR
);

18 
SpiSe˘‹Eø£
();

19 
WrôeDATA_TO_Êash
();

20 
RódDATA_FROM_FLASH
();

21 
SëDevi˚Sètus
();

22 
Sètus_to_AP
();

23 
PﬁlögSPIBusy
();

24 
Dñay800us
();

	@isr.c

40 
	#_ISR_C


	)

41 
	~"öcfûe.h
"

42 
	~"ì¥om.h
"

51 
ì¥om_if
 
dev_if
;

52 
	$usbI¡0
(Ë
öãºu±
 0 
usög
 3

54 
byI¡0SètusA
 = 
REG1630_INT0A
;

55 
byI¡0SètusB
 = 
REG1630_INT0B
;

58 if(
byI¡0SètusB
 & 
TX3_INT
){

59 
CLR_TX3_INT
;

60 
dev_if
.
a˘i⁄
 = 1;

64 if(
byI¡0SètusB
 & 
TX5_INT
){

65 
CLR_TX5_INT
;

69 if(
byI¡0SètusB
 & 
RC4_INT
){

70 
CLR_RC4_INT
;

71 
dev_if
.
a˘i⁄
 = 1;

75 if(
byI¡0SètusA
 & 
TX1_INT
){

76 
CLR_TX1_INT
;

77 
CLR_TX1_RDY
;

78 
gfTx1Fœg
 = 1;

79 
gfBulkX„rD⁄e
 = 1;

83 if(
byI¡0SètusA
 & 
RC2_INT
){

84 
CLR_RC2_INT
;

85 
gfRC2Fœg
 = 1;

89 if(
byI¡0SètusA
 & 
RESET_INT
){

90 
CLR_RESET_INT
;

91 
gfRe£tFœg
 = 1;

95 if(
byI¡0SètusA
 & 
SUSPEND_INT
){

97 
CLR_SUSPEND_INT
;

98 
gfSu•íd
 = 1;

102 if(
byI¡0SètusA
 & 
RESUME_INT
){

103 
CLR_RESUME_INT
;

104 
	`USB_Resume
();

108 if(
byI¡0SètusA
 & 
SETUP_INT
){

109 
gbI¡0IE
 |
SUSPEND_IE
;

110 
REG1630_INT0_ENA
 = 
gbI¡0IE
;

111 
CLR_SETUP_INT
;

112 
CLR_OUTI0_INT
;

113 
gfRc0Fœg
 = 1;

117 if(
byI¡0SètusA
 & 
TX0_INT
){

118 
CLR_TX0_INT
;

119 
CLR_TX0_RDY
;

120 
bEP0x„rD⁄e
 = 0;

121 if(
gfSëAddªss
){

122 
REG1630_USB_ADDR
 = 
gbUsbAddr
;

123 
gfSëAddªss
 = 0;

124 
SET_OUT0_RDY
;

127 
gfTx0Fœg
 = 1;

133 if(
byI¡0SètusA
 & 
OUTI0_INT
){

134 
XmtBuff
.
bLígth
 = 0;

135 
gfOut0Fœg
 = 1;

136 if(
DATA1_ZERO_LENGTH
){

137 
CLR_TX0_INT
;

138 
REG1630_TX0
 = 0;

139 
XmtBuff
.
bLígth
 = 0;

141 
CLR_OUTI0_INT
;

142 
CLR_OUT0_RDY
;

145 
	}
}

154 
	$usbI¡1
(Ë
öãºu±
 2 
usög
 1

157 
byI¡1Sètus
 = 
REG1630_INT1
;

161 if(
byI¡1Sètus
&
WKTUPI_INT
)

163 
CLR_WKTUPI_INT
;

167 if(
byI¡1Sètus
 & 
VDD5VRI_INT
)

169 
CLR_VDD5VRI_INT
;

170 
gf5VDDFœg
 = 1;

173 if(
byI¡1Sètus
 & 
EXINT0I_INT
)

175 
CLR_EXINT0I_INT
;

180 if(
byI¡1Sètus
 & 
EXINT1I_INT
)

182 
CLR_EXINT1I_INT
;

185 if(
byI¡1Sètus
 & 
EXINT3I_INT
)

187 
CLR_EXINT3I_INT
;

191 if(
byI¡1Sètus
 & 
EXINT2I_INT
)

193 
CLR_EXINT2I_INT
;

196 
	}
}

206 
	$USB_Timî1
(Ë
öãºu±
 3 
usög
 2

208 
TR1
 = 0;

210 if(
gfFa°ModeÊag
)

212 
TH1
 = (65536 - 40000) / 256;

213 
TL1
 = (65536 - 40000) % 256;

214 if(
gfUSBInôEND
==0 )

219 if(
gfUSBInôEND
)

221 
gbTimîC¡
++;

222 if(
gbTimîC¡
 == 0x25)

225 
gbTimîC¡
 = 0;

228 
TR1
 = 1;

234 
TH1
 = (65536 - 450) / 256;

235 
TL1
 = (65536 - 450) % 256;

236 
gbTimîC¡
++;

237 
TR1
 = 1;

242 
	}
}

	@main.c

42 
	#MAIN_C


	)

43 
	#SPI


	)

44 
	~"öcfûe.h
"

45 
	~"ì¥om.h
"

46 
	~"iicbridge.h
"

47 
	~"iic.h
"

48 
sbô
 
	gmyp1
=
P1
^1;

49 
ì¥om_if
 
	gdev_if
;

50 
	$öôM51CålRegs
()

52 
IE
 = 0;

53 
TMOD
 = 0x11;

54 
IT1
 = 0;

55 
TH1
 = (65536 - 450) / 256;

56 
TL1
 = (65536 - 450) % 256;

57 
IP
 = 0x05;

58 
IE
 = 0x85;

59 
	}
}

68 
	$Ch™gToFa°Mode
()

70 
gfFa°ModeÊag
 = 1;

71 
SET_FCLK_EN
;

72 
	`Dñay800us
();

73 
ET1
 = 1;

74 
TR1
 = 1;

75 
SET_CKFAST
;

77 
	}
}

84 
	$PﬁlögUsbComm™d
()

86 
	`usb_ªadiic_h™dÀ
();

87 
	`usb_wrôeiic_h™dÀ
();

90 if(
gfOut0Fœg
 == 1) {

91 
gfOut0Fœg
 = 0;

92 
	`Ep0Out
();

93 
SET_OUT0_RDY
;

97 if(
gfRc0Fœg
 == 1) {

98 
gfRc0Fœg
 = 0;

99 
	`EP0SëupTask
();

100 
SET_OUT0_RDY
;

104 if(
gfTx0Fœg
 == 1) {

105 
gfTx0Fœg
 = 0;

108 
	`EP0_LﬂdFIFO
();

109 
SET_OUT0_RDY
;

113 if(
gfSu•íd
 == 1) {

114 
	`Su•íd
();

118 if(
gf5VDDFœg
 == 1) {

119 
gf5VDDFœg
 =0;

121 
	`öôM51CålRegs
();

122 
	`usbBusRe£t
();

126 if(
gfRe£tFœg
 == 1) {

127 
gfRe£tFœg
 = 0;

128 
	`usbBusRe£t
();

131 
	}
}

139 
	$USB_Resume
()

141 
gfSu•íd
 = 0;

142 
CLR_RESUME_INT
;

143 
CLR_SUSPEND_INT
;

144 
gbI¡0IE
 |(
SETUP_IE
 | 
TX0_IE
 |
TX1_IE
|
RC2_IE
|
RESET_IE
|
OUTI0_IE
|TX1_IE|
SUSPEND_IE
);

145 
gbI¡1IE
 = (
VDD5VRIE_INT
|
EXINT0IE
|
WKTUPIE
);

146 
CLR_SUSPEND_MODE
;

147 
REG1630_INT0_ENA
 = 
gbI¡0IE
;

148 
REG1630_INT1_EN
 = 
gbI¡1IE
;

151 
REG1630_PC_GPIO_CON_AC
 = 0xf0;

152 
REG1630_PC_GPIO_9C
 = 0x0f;

154 
REG1630_PA_GPIO_9A
 = 0xf6;

155 
	`Inô_SPIB
();

156 
REG1630_INT0A
 = 0;

157 
REG1630_INT0B
 = 0;

158 
REG1630_INT1
 = 0;

159 
REG1630_RC0
 = 0;

160 
REG1630_TX0
 = 0;

161 
REG1630_TX1
 = 0;

162 
REG1630_RC2
 = 0;

163 
REG1630_TX3
 = 0;

164 
REG1630_RC4
 = 0;

165 
REG1630_TX5
 = 0;

166 
gfResume
 = 1;

168 
	}
}

175 
	$Su•íd
()

178 if(
gfUSBInôEND
 ==1)

180 
REG1630_PB_GPIO_CON_AB
 = 0xff;

181 
REG1630_PB_GPIO_9B
 = 0x00;

182 
REG1630_PC_GPIO_CON_AC
 = 0xf0;

183 
REG1630_PWM_CTRL
 =0x00;

184 
REG1630_PC_GPIO_9C
 = 0x00;

186 
REG1630_PA_GPIO_CON_AA
 = 0xff;

188 
REG1630_PA_GPIO_9A
 = 0x04;

189 
P1
=0x00;

191 
gbI¡0IE
 = (
RESET_IE
|
RESUME_IE
);

192 
REG1630_INT0_ENA
 = 
gbI¡0IE
;

193 
REG1630_INT1_EN
 = 0;

195 
SET_SUSPEND_MODE
;

197 
SET_PWR_DN
;

198 
gfUSBInôEND
 = 0;

200 
	}
}

210 
	$usbBusRe£t
()

213 
REG1630_INT0A
 = 0;

215 
REG1630_INT0B
 = 0;

219 
VDD5VRI
 1F81.7 
R
/
W
 0 
Dëe˘
 
VDD
 
pö
 
ri£
 
to
 5
V
 
öãºu±
 
Êag
, 
wrôe
 0 
‹
 
RST_P
Åÿ
˛ór
 flag

220 
SPIA_SLAVE_INT
 1F81.6 
R
/
W
 0 
SPIA
 
ª˚ived
 
fú°
 
	`d©a
(
¶ave
 
mode
Ë
öãºu±
 
Êag
, 
wrôe
 0 
to
 
˛ór
 flag

221 
UART_RX_ERRI
 1F81.5 
R
/
W
 0 
UART
 
RX
 
°©us
 
îr‹
 
Êag
, 
wrôe
 0 
to
 
˛ór
 flag

222 
WKTUPI
 1F81.4 
R
/
W
 0 
WAKEUP
 
	`timî
(0.5
£c
Ë
öãºu±
 
Êag
, 
wrôe
 0 
to
 
˛ór
 flag

223 
EXINT3I
 1F81.3 
R
/
W
 0 
PC3
 
öãºu±
 
Êag
, 
wrôe
 0 
to
 
˛ór
 flag

224 
EXINT2I
 1F81.2 
R
/
W
 0 
PC2
 
öãºu±
 
Êag
, 
wrôe
 0 
to
 
˛ór
 flag

225 
EXINT1I
 1F81.1 
R
/
W
 0 
PC1
 
öãºu±
 
Êag
, 
wrôe
 0 
to
 
˛ór
 flag

226 
EXINT0I
 1F81.0 
R
/
W
 0 
PC0
 
öãºu±
 
Êag
, 
wrôe
 0 
to
 
˛ór
 flag

229 
REG1630_INT1
 = 0;

233 
REG1630_PWR_CTRL
 = 0;

236 
REG1630_USB_ADDR
 = 0;

239 
REG1630_PWM_CTRL
 = 0;

242 
REG1630_RC0
 = 0;

243 
REG1630_TX0
 = 0;

246 
REG1630_TX1
 = 0;

249 
REG1630_RC2
 = 0;

252 
REG1630_TX3
 = 0;

255 
REG1630_RC4
 = 0;

258 
REG1630_TX5
 = 0;

261 
byUSBAddr
 = 0;

262 
gfSu•íd
 = 0;

264 
gbI¡0IE
 = (
SETUP_IE
 | 
TX0_IE
 | 
TX1_IE
 | 
RC2_IE
| 
RESET_IE
 | 
OUTI0_IE
 | 
SUSPEND_IE
);

265 
REG1630_INT0_ENA
 = 
gbI¡0IE
;

266 
gbI¡1IE
 = (
VDD5VRIE_INT
);

267 
REG1630_INT1_EN
 = 
gbI¡1IE
;

269 
gfTx1RAMFœg
 = 
USB_RAM0
;

270 
SET_EP1_CFG
;

271 
SET_RC2_CFG
;

272 
SET_EP3_CFG
;

274 
REG1630_XRAM_CTRL
 = 0x60;

276 
REG1630_PA_GPIO_9A
 &= 0xff;

278 
gfFa°ModeÊag
 = 0;

279 
gfFa°ModeÊag
 =1;

280 
gbTimîC¡
 = 0;

281 
gfUSBInôEND
 = 0;

286 
gfUSEöôGëDes¸ùt‹
 = 0;

288 
gfTe°unô˙t
 = 0;

290 
ucHID°©us
=0;

291 
gfE¡ryGëC⁄fig
=0;

294 
	}
}

297 
	$PowîOn_sub
()

299 
REG1630_PC_GPIO_CON_AC
 = 0xf0;

300 
REG1630_PC_GPIO_9C
 = 0x0f;

301 
REG1630_PA_GPIO_CON_AA
 = 0xff;

302 
REG1630_PA_GPIO_9A
 = 0xf6;

303 
REG1630_INT0_ENA
 = 
gbI¡0IE
=0;

304 
gbI¡1IE
 =(
VDD5VRIE_INT
);

305 
REG1630_INT1_EN
 = 
gbI¡1IE
;

306 
	}
}

308 
code
 
	gdx516
[3] 
	g_©_
 0x003b;

309 
	$maö
()

313 
	`öôM51CålRegs
();

314 
	`Ch™gToFa°Mode
();

315 
	`PowîOn_sub
();

316 
	`usbBusRe£t
();

317 
ET1
 = 0;

318 
TR1
 = 0;

319 
gfFa°ModeÊag
 = 1;

322 
SET_GPIO_PA5
;

324 
SET_PA5
;

325 
CLR_PA5
;

326 
SET_PA5
;

329 
	`IIC_Inô
();

331 
d_if
.
±r
 = 
myd©a
;

332 
d_if
.
off£t
 = 0;

333 
d_if
.
cou¡
 = 8;

334 
d_if
.
Êag
 = 
PAGE_SIZE_16_FLAG
 | 
DEVICE_TIMEOUT_1
 | 
DEVICE_WR_FLAG
;

335 
d_if
.
tŸÆÀn
 = 256;

336 
d_if
.
devaddr
 = 0xa0;

337 
d_if
.
∑ge_size
 = 16;

340 
myd©a
[0] = '1';

341 
myd©a
[1] = '2';

342 
myd©a
[2] = '3';

343 
myd©a
[3] = '4';

344 
myd©a
[4] = '5';

345 
myd©a
[5] = '6';

346 
myd©a
[6] = '7';

347 
myd©a
[7] = '8';

348 
myd©a
[8] = '9';

349 
	`ì¥om_wrôe
(&
d_if
);

351 
d_if
.
±r
 = 
myd©a
;

352 
d_if
.
off£t
 = 0;

353 
d_if
.
cou¡
 = 8;

354 
d_if
.
Êag
 = 
PAGE_SIZE_16_FLAG
 | 
DEVICE_TIMEOUT_1
 | 
DEVICE_RD_FLAG
;

355 
d_if
.
tŸÆÀn
 = 256;

356 
d_if
.
devaddr
 = 0xa0;

357 
d_if
.
∑ge_size
 = 16;

359 
	`ì¥om_ªad
(&
d_if
);

361 
REG1630_USB_PLUG_OUT
 & 
VDD5V_EXIST_FLG
)

363 
	`PﬁlögUsbComm™d
();

365 
	}
}

	@main.h

1 #i‚de‡
__MAIN__


2 
	#__MAIN__


	)

3 
	#kÆ_öt8
 

	)

4 
	#kÆ_uöt8
 

	)

	@new.c

2 uni⁄ {
	mi
; 
	mc
[2];} 
	tMYWORD
;

5 
	sEP0_COMMAND
 {

6 
	mbmReque°Ty≥
;

7 
	mbReque°
;

8 
MYWORD
 
	mwVÆue
;

9 
MYWORD
 
	mwIndex
;

10 
MYWORD
 
	mwLígth
;

11 } 
	tEP0_COMMAND
;

12 
EP0_COMMAND
 
	ggEp0Comm™d
;

15 
	$ªad_1f20to28
 (* 
pD©a
)

18 
BYTE
 
T¨gëReg
;

19 
UINT
 
i
;

20 
i
=0; i < 8; i++) {

21 
pD©a
[
i
] = 
REG1630_SET0_FIFO
[i];

24 
bTemp
 = 
gEp0Comm™d
.
wIndex
.
c
[1];

25 
gEp0Comm™d
.
wIndex
.
c
[1] = gEp0Command.wIndex.c[0];

26 
gEp0Comm™d
.
wIndex
.
c
[0] = 
bTemp
;

29 
bTemp
 = 
gEp0Comm™d
.
wVÆue
.
c
[1];

30 
gEp0Comm™d
.
wVÆue
.
c
[1] = gEp0Command.wValue.c[0];

31 
gEp0Comm™d
.
wVÆue
.
c
[0] = 
bTemp
;

34 
bTemp
 = 
gEp0Comm™d
.
wLígth
.
c
[1];

35 
gEp0Comm™d
.
wLígth
.
c
[1] = gEp0Command.wLength.c[0];

36 
gEp0Comm™d
.
wLígth
.
c
[0] = 
bTemp
;

38 
	}
}

42 
	$EP0SëupTask
()

46 i‡(
REG1630_RC0
 & 
RC0_ERR
) {

49 
	`ªad_1f20to28
((
BYTE
*)&
gEp0Comm™d
);

52 
bTemp
 = 
gEp0Comm™d
.
wVÆue
.
c
[1];

53 
gEp0Comm™d
.
wVÆue
.
c
[1] = gEp0Command.wValue.c[0];

54 
gEp0Comm™d
.
wVÆue
.
c
[0] = 
bTemp
;

57 
bTemp
 = 
gEp0Comm™d
.
wIndex
.
c
[1];

58 
gEp0Comm™d
.
wIndex
.
c
[1] = gEp0Command.wIndex.c[0];

59 
gEp0Comm™d
.
wIndex
.
c
[0] = 
bTemp
;

62 
bTemp
 = 
gEp0Comm™d
.
wLígth
.
c
[1];

63 
gEp0Comm™d
.
wLígth
.
c
[1] = gEp0Command.wLength.c[0];

64 
gEp0Comm™d
.
wLígth
.
c
[0] = 
bTemp
;

66 
gEp0Comm™d
.
bmReque°Ty≥
 & 0xB0) {

68 
gEp0Comm™d
.
bReque°
) {

69 
USB_GET_STATUS
:

73 
USB_GET_DESCRIPTOR
:

74 
	`GëDes¸ùt‹Reque°
();

77 
USB_GET_CONFIGURATION
:

81 
USB_GET_INTERFACE
:

91 
gEp0Comm™d
.
bReque°
) {

92 
SET_ADDRESS
:

93 
	`SëAddªssReque°
();

96 
SET_FEATURE
:

97 
	`SëFótuªReque°
();

100 
CLEAR_FEATURE
:

101 
	`CÀ¨FótuªReque°
();

104 
SET_CONFIGURATION
:

105 
	`SëC⁄figuøti⁄Reque°
();

108 
SET_INTERFACE
:

109 
	`SëI¡îÁ˚Reque°
();

111 
SET_IDLE
:

112 
	`SëIdÀ
();

114 
SET_DESCRIPTOR
:

116 
gEp0Sètus
.
bEpSèã
 = 
EP_ERROR
;

124 
	}
}

129 
	$GëDes¸ùt‹Reque°
 ()

131 
MYWORD
 
wTempI¡
;

134 i‡(
gEp0Comm™d
.
bmReque°Ty≥
 == 0x81) {

135 i‡(
gEp0Comm™d
.
wVÆue
.
c
[0] == 0x22 && \

136 
gEp0Comm™d
.
wIndex
.
c
[0]==0 &&

137 
gEp0Comm™d
.
wLígth
.
c
[1]==0X67) {

138 
XmtBuff
.
bLígth
 = 71;

139 
XmtBuff
.
p
 = 
hid1_desc
;

140 
	`EP0_LﬂdFIFO
();

145 i‡(
gEp0Comm™d
.
bmReque°Ty≥
 == 0x81) {

146 i‡(
gEp0Comm™d
.
wVÆue
.
c
[0] == 0x22 && \

147 
gEp0Comm™d
.
wIndex
.
c
[0]==1 &&

148 
gEp0Comm™d
.
wLígth
.
c
[1]==0X64) {

149 
XmtBuff
.
bLígth
 = 68;

150 
XmtBuff
.
p
 = 
hid2_desc
;

151 
	`EP0_LﬂdFIFO
();

157 
gEp0Comm™d
.
wVÆue
.
c
[0])

160 
USB_DEVICE
:

162 
XmtBuff
.
bLígth
 = 
STD_DSC_SIZE
;

164 i‡(
XmtBuff
.
bLígth
 > 
gEp0Comm™d
.
wLígth
.
i
) {

165 
XmtBuff
.
bLígth
 = 
gEp0Comm™d
.
wLígth
.
i
;

167 
tx0_d©a_tgl
 = 1;

169 
XmtBuff
.
p
 = 
gDes¸ùt‹M≠
.
bStdDevDsc
;

170 
	`EP0_LﬂdFIFO
();

174 
USB_CONFIG
:

175 
tx0_d©a_tgl
 = 1;

177 i‡(
gEp0Comm™d
.
wVÆue
.
c
[1] >

178 
gDes¸ùt‹M≠
.
bStdDevDsc
[
°d_bNumC⁄figuøti⁄s
])

186 
wTempI¡
.
c
[1] = 
gDes¸ùt‹M≠
.
bCfg1
[
cfg_wTŸÆLígth_lsb
];

187 
wTempI¡
.
c
[0] = 
gDes¸ùt‹M≠
.
bCfg1
[
cfg_wTŸÆLígth_msb
];

188 
XmtBuff
.
bLígth
 = 
wTempI¡
.
i
;

191 i‡(
XmtBuff
.
bLígth
 > 
gEp0Comm™d
.
wLígth
.
i
)

193 
XmtBuff
.
bLígth
 = 
gEp0Comm™d
.
wLígth
.
i
;

196 
XmtBuff
.
p
 = 
gDes¸ùt‹M≠
.
bCfg1
;

197 
	`EP0_LﬂdFIFO
();

203 
	}
}

205 
	$SëAddªssReque°
()

207 
gfSëAddªss
 = 1;

208 
	}
}

210 
	$SëFótuªReque°
()

213 
	}
}

215 
	$SëC⁄figuøti⁄Reque°
()

218 
	}
}

220 
	$CÀ¨FótuªReque°
()

222 
	}
}

224 
	$SëC⁄figuøti⁄Reque°
()

226 
	}
}

228 
	$SëI¡îÁ˚Reque°
()

230 
	}
}

232 
	$SëIdÀ
()

234 
	}
}

238 
	$EP0_LﬂdFIFO
()

240 
i
;

242 i‡(
XmtBuff
.
bLígth
 <= 0) {

244 
REG1630_TX0
 |
TX0_TGL
;

245 
REG1630_TX0
 &~
TX0_CNT
;

246 
SET_TX0_RDY
;

249 i‡(
XmtBuff
.
bLígth
 > 8) {

250  
i
 = 0; i < 8; i++) {

251 
REG1630_TX0_FIFO
[
i
] = 
XmtBuff
.
p
[i];

253 
XmtBuff
.
bLígth
 = XmtBuff.bLength - 8;

254 
XmtBuff
.
p
 = XmtBuff.p+8;

256  
i
 = 0; i < 
XmtBuff
.
bLígth
; i++) {

257 
REG1630_TX0_FIFO
[
i
] = 
XmtBuff
.
p
[i];

261 i‡(
tx0_d©a_tgl
 == 1) {

262 
REG1630_TX0
 |
TX0_TGL
;

263 
tx0_d©a_tgl
 = 0;

266 
REG1630_TX0
 &~
TX0_TGL
;

267 
tx0_d©a_tgl
 = 1;

271 
SET_TX0_RDY
;

272 
	}
}

	@tmu3112Reg.h

3 
	#BIT0
 0x01

	)

4 
	#BIT1
 0x02

	)

5 
	#BIT2
 0x04

	)

6 
	#BIT3
 0x08

	)

7 
	#BIT4
 0x10

	)

8 
	#BIT5
 0x20

	)

9 
	#BIT6
 0x40

	)

10 
	#BIT7
 0x80

	)

12 
	#XRAM0_HI
 0x10

	)

13 
	#XRAM1_HI
 0x11

	)

14 
	#XRAM2_HI
 0x12

	)

15 
	#XRAM3_HI
 0x13

	)

16 
	#XRAMA_HI
 0x14

	)

17 
	#XRAMB_HI
 0x15

	)

19 
	#TX1630REG_BASE
 0x1f00

	)

20 
	#TMU3112REG_BASE
 0x1f00

	)

21 
	#REG1630_XRAM0
 ((
BYTE
 vﬁ©ûê
xd©a
 *)0x1000 )

22 
	#REG1630_XRAM1
 ((
BYTE
 vﬁ©ûê
xd©a
 *)0x1100 )

23 
	#REG1630_XRAM2
 ((
BYTE
 vﬁ©ûê
xd©a
 *)0x1200 )

24 
	#REG1630_XRAM3
 ((
BYTE
 vﬁ©ûê
xd©a
 *)0x1300 )

25 
	#REG1630_XRAMA
 ((
BYTE
 vﬁ©ûê
xd©a
 *)0x1400 )

26 
	#REG1630_XRAMB
 ((
BYTE
 vﬁ©ûê
xd©a
 *)0x1500 )

27 
	#REG1630_SET0_FIFO
 ((
BYTE
 vﬁ©ûê
xd©a
 *)0x1f20 )

28 
	#REG1630_OUT0_FIFO
 ((
BYTE
 vﬁ©ûê
xd©a
 *)0x1f28 )

29 
	#REG1630_TX0_FIFO
 ((
BYTE
 vﬁ©ûê
xd©a
 *)0x1f30 )

30 
	#REG1630_TX5_FIFO
 ((
BYTE
 vﬁ©ûê
xd©a
 *)0x1f40 )

31 
	#REG1630_USB_ADDR
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x00))

	)

34 
	#REG1630_INT0A
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x01))

	)

35 
	#OUTI0_INT
 
BIT7


	)

36 
	#TX0_INT
 
BIT6


	)

37 
	#TX1_INT
 
BIT5


	)

38 
	#RC2_INT
 
BIT4


	)

39 
	#RESET_INT
 
BIT3


	)

40 
	#RESUME_INT
 
BIT2


	)

41 
	#SUSPEND_INT
 
BIT1


	)

42 
	#SETUP_INT
 
BIT0


	)

44 
	#CLR_OUTI0_INT
 (
REG1630_INT0A
 &~
BIT7
)

	)

45 
	#CLR_TX0_INT
 (
REG1630_INT0A
 &~
BIT6
)

	)

46 
	#CLR_TX1_INT
 (
REG1630_INT0A
 &~
BIT5
)

	)

47 
	#CLR_RC2_INT
 (
REG1630_INT0A
 &~
BIT4
)

	)

48 
	#CLR_RESET_INT
 (
REG1630_INT0A
 &~
BIT3
)

	)

49 
	#CLR_RESUME_INT
 (
REG1630_INT0A
 &~
BIT2
)

	)

50 
	#CLR_SUSPEND_INT
 (
REG1630_INT0A
 &~
BIT1
)

	)

51 
	#CLR_SETUP_INT
 (
REG1630_INT0A
 &~
BIT0
)

	)

53 
	#REG1630_INT0_ENA
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x02))

	)

54 
	#OUTI0_IE
 
BIT7


	)

55 
	#TX0_IE
 
BIT6


	)

56 
	#TX1_IE
 
BIT5


	)

57 
	#RC2_IE
 
BIT4


	)

58 
	#RESET_IE
 
BIT3


	)

59 
	#RESUME_IE
 
BIT2


	)

60 
	#SUSPEND_IE
 
BIT1


	)

61 
	#SETUP_IE
 
BIT0


	)

63 
	#REG1630_PWR_CTRL
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x03))

	)

64 
	#SET_OUT0_RDY
 (
REG1630_PWR_CTRL
 |
BIT0
)

	)

65 
	#CLR_OUT0_RDY
 (
REG1630_PWR_CTRL
 &0x„)

	)

66 
	#SUSPEND_MODE
 (
REG1630_PWR_CTRL
 |
BIT7
)

	)

67 
	#RESUME
 (
REG1630_PWR_CTRL
 |
BIT6
)

	)

70 
	#SET_OUT0_RDY
 (
REG1630_PWR_CTRL
 |
BIT0
)

	)

71 
	#CLR_OUT0_RDY
 (
REG1630_PWR_CTRL
 &0x„)

	)

72 
	#SET_SUSPEND_MODE
 (
REG1630_PWR_CTRL
 |
BIT7
)

	)

73 
	#CLR_SUSPEND_MODE
 (
REG1630_PWR_CTRL
 &~
BIT7
)

	)

74 
	#SET_RESUME
 (
REG1630_PWR_CTRL
 |
BIT6
)

	)

75 
	#CLR_RESUME
 (
REG1630_PWR_CTRL
 &~
BIT6
)

	)

77 
	#REG1630_RC0
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x04))

	)

78 
	#OUT0_TGL
 
BIT7


	)

79 
	#RC0_ERR
 
BIT6


	)

80 
	#RC0_CNT
 0x0f

	)

81 
	#DATA1_ZERO_LENGTH
 ((
REG1630_RC0
 & 0x0fË=0)

	)

84 
	#REG1630_TX0
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x05))

	)

85 
	#TX0_RDY
 
BIT6


	)

86 
	#TX0_TGL
 
BIT5


	)

87 
	#EP0_STALL
 
BIT4


	)

88 
	#TX0_CNT
 0x0f

	)

90 
	#SET_TX0_RDY
 (
REG1630_TX0
 |
BIT6
)

	)

91 
	#CLR_TX0_RDY
 (
REG1630_TX0
 &0xbf)

	)

92 
	#SET_EP0_STALL
 (
REG1630_TX0
 |
BIT4
)

	)

93 
	#CLR_EP0_STALL
 (
REG1630_TX0
 &~
BIT4
)

94 
	#CLR_EP0_TGL
 (
REG1630_TX0
 &~
BIT5
)

96 
	#REG1630_TX1
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x06))

	)

97 
	#EP1_STALL
 
BIT7


	)

98 
	#EP1_CFG
 
BIT6


	)

99 
	#TX1_RDY
 
BIT5


	)

100 
	#TX1_TGL
 
BIT4


	)

102 
	#SET_EP1_STALL
 (
REG1630_TX1
 |
BIT7
)

	)

103 
	#CLR_EP1_CFG
 (
REG1630_TX1
 &~
BIT6
)

	)

104 
	#SET_EP1_CFG
 (
REG1630_TX1
 |
BIT6
)

	)

105 
	#SET_TX1_RDY
 (
REG1630_TX1
 |
BIT5
)

	)

106 
	#CLR_TX1_RDY
 (
REG1630_TX1
 &~
BIT5
)

	)

107 
	#CLR_TX1_STALL
 (
REG1630_TX1
 &~
BIT7
)

108 
	#CLR_TX1_TGL
 (
REG1630_TX1
 &~
BIT4
)

109 
	#SET_TX1_TGL
 (
REG1630_TX1
 |
BIT4
)

	)

112 
	#REG1630_RC2
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x07))

	)

113 
	#EP2_STALL
 
BIT7


	)

114 
	#EP2_CFG
 
BIT6


	)

115 
	#RC2_RDY
 
BIT5


	)

116 
	#RC2_TGL
 
BIT4


	)

117 
	#RC2_ERR
 
BIT3


	)

119 
	#SET_RC2_STALL
 (
REG1630_RC2
 |
BIT7
)

	)

120 
	#CLR_RC2_STALL
 (
REG1630_RC2
 &~
BIT7
)

	)

121 
	#SET_RC2_CFG
 (
REG1630_RC2
 |
BIT6
)

	)

122 
	#CLR_RC2_CFG
 (
REG1630_RC2
 &~
BIT6
)

	)

123 
	#SET_RC2_RDY
 (
REG1630_RC2
 |
BIT5
)

	)

124 
	#CLR_RC2_RDY
 (
REG1630_RC2
 &~
BIT5
)

	)

125 
	#CLR_RC2_TGL
 (
REG1630_RC2
 &~
BIT4
)

126 

	)

130 
	#REG1630_TX1_CNT
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x08))

	)

134 
	#REG1630_RC2_CNT
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x09))

	)

137 
	#REG1630_TX5
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x0a))

	)

138 
	#EP5_STALL
 
BIT7


	)

139 
	#EP5_CFG
 
BIT6


	)

140 
	#EP5_RDY
 
BIT5


	)

141 
	#TX5_TGL
 
BIT4


	)

142 
	#TX5_CNT
 0x0F

	)

143 
	#SET_EP5_STALL
 (
REG1630_TX5
 |
BIT7
)

145 
	#REG1630_INT0B
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x0b))

	)

146 
	#TX3_INT
 
BIT7


	)

147 
	#RC4_INT
 
BIT6


	)

148 
	#TX5_INT
 
BIT5


	)

149 
	#CLR_TX3_INT
 (
REG1630_INT0B
 &~
BIT7
)

	)

150 
	#CLR_RC4_INT
 (
REG1630_INT0B
 &~
BIT6
)

	)

151 
	#CLR_TX5_INT
 (
REG1630_INT0B
 &~
BIT5
)

	)

154 
	#REG1630_INT0_ENB
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x0c))

	)

155 
	#TX3IE
 
BIT7


	)

156 
	#RC4IE
 
BIT6


	)

157 
	#TX5IE
 
BIT5


	)

160 
	#REG1630_TX3
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x0d))

	)

161 
	#EP3_STALL
 
BIT7


	)

162 
	#EP3_CFG
 
BIT6


	)

163 
	#EP3_TX_RDY
 
BIT5


	)

164 
	#EP3_TGL
 
BIT4


	)

166 
	#SET_EP3_STALL
 (
REG1630_TX3
 |
BIT7
)

	)

167 
	#SET_EP3_CFG
 (
REG1630_TX3
 |
BIT6
)

	)

168 
	#SET_TX3_RDY
 (
REG1630_TX3
 |
BIT5
)

	)

169 
	#SET_EP3_TGL
 (
REG1630_TX3
 |
BIT4
)

	)

171 
	#CLR_EP3_STALL
 (
REG1630_TX3
 &~
BIT7
)

	)

172 
	#CLR_EP3_CFG
 (
REG1630_TX3
 &~
BIT6
)

	)

173 
	#CLR_TX3_RDY
 (
REG1630_TX3
 &~
BIT5
)

	)

174 
	#CLR_EP3_TGL
 (
REG1630_TX3
 &~
BIT4
)

	)

178 
	#REG1630_RC4
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x0e))

	)

179 
	#EP4_STALL
 
BIT7


	)

180 
	#EP4_CFG
 
BIT6


	)

181 
	#EP4_RDY
 
BIT5


	)

182 
	#EP4_TGL
 
BIT4


	)

183 
	#EP4_ERR
 
BIT3


	)

185 
	#SET_EP4_STALL
 (
REG1630_RC4
 |
BIT7
)

	)

186 
	#SET_EP4_CFG
 (
REG1630_RC4
 |
BIT6
)

	)

187 
	#SET_RC4_RDY
 (
REG1630_RC4
 |
BIT5
)

	)

189 
	#CLR_EP4_STALL
 (
REG1630_RC4
 &~
BIT7
)

	)

190 
	#CLR_EP4_CFG
 (
REG1630_RC4
 &~
BIT6
)

	)

191 
	#CLR_RC4_RDY
 (
REG1630_RC4
 &~
BIT5
)

	)

195 
	#REG1630_TX3_CNT
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x0f))

	)

199 
	#REG1630_RC4_CNT
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x10))

	)

203 
	#REG1630_XRAM_CTRL
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x80))

	)

204 
	#XRAM0USB
 
BIT7


	)

205 
	#XRAM1USB
 
BIT6


	)

206 
	#XRAM2USB
 
BIT5


	)

207 
	#XRAM3USB
 
BIT4


	)

208 
	#XRAMAUSB
 
BIT3


	)

209 
	#XRAMBUSB
 
BIT2


	)

211 
	#SET_XRAM0USB
 (
REG1630_XRAM_CTRL
 |
BIT7
)

	)

212 
	#CLR_XRAM0USB
 (
REG1630_XRAM_CTRL
 &~
BIT7
)

	)

213 
	#SET_XRAM1USB
 (
REG1630_XRAM_CTRL
 |
BIT6
)

	)

214 
	#CLR_XRAM1USB
 (
REG1630_XRAM_CTRL
 &~
BIT6
)

	)

215 
	#SET_XRAM2USB
 (
REG1630_XRAM_CTRL
 |
BIT5
)

	)

216 
	#CLR_XRAM2USB
 (
REG1630_XRAM_CTRL
 &~
BIT5
)

	)

217 
	#SET_XRAM3USB
 (
REG1630_XRAM_CTRL
 |
BIT4
)

	)

218 
	#CLR_XRAM3USB
 (
REG1630_XRAM_CTRL
 &~
BIT4
)

	)

219 
	#SET_XRAMAUSB
 (
REG1630_XRAM_CTRL
 |
BIT3
)

	)

220 
	#CLR_XRAMAUSB
 (
REG1630_XRAM_CTRL
 &~
BIT3
)

	)

221 
	#SET_XRAMBUSB
 (
REG1630_XRAM_CTRL
 |
BIT2
)

	)

222 
	#CLR_XRAMBUSB
 (
REG1630_XRAM_CTRL
 &~
BIT2
)

	)

224 
	#REG1630_INT1
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x81))

	)

225 
	#VDD5VRI_INT
 
BIT7


	)

226 
	#SPIA_SCAVE_INT
 
BIT6


	)

227 
	#UART_RX_ERRI_INT
 
BIT5


	)

228 
	#WKTUPI_INT
 
BIT4


	)

229 
	#EXINT3I_INT
 
BIT3


	)

230 
	#EXINT2I_INT
 
BIT2


	)

231 
	#EXINT1I_INT
 
BIT1


	)

232 
	#EXINT0I_INT
 
BIT0


	)

234 
	#CLR_VDD5VRI_INT
 (
REG1630_INT1
 &~
BIT7
)

	)

235 
	#CLR_SPIA_SCAVE_INT
 (
REG1630_INT1
 &~
BIT6
)

	)

236 
	#CLR_UART_RX_ERRI_INT
 (
REG1630_INT1
 &~
BIT5
)

	)

237 
	#CLR_WKTUPI_INT
 (
REG1630_INT1
 &~
BIT4
)

	)

238 
	#CLR_EXINT3I_INT
 (
REG1630_INT1
 &~
BIT3
)

	)

239 
	#CLR_EXINT2I_INT
 (
REG1630_INT1
 &~
BIT2
)

	)

240 
	#CLR_EXINT1I_INT
 (
REG1630_INT1
 &~
BIT1
)

	)

241 
	#CLR_EXINT0I_INT
 (
REG1630_INT1
 &~
BIT0
)

	)

245 
	#REG1630_INT1_EN
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x82))

	)

246 
	#VDD5VRIE_INT
 
BIT7


	)

247 
	#SPIA_SLAVEIE
 
BIT6


	)

248 
	#UART_RX_ERRIE
 
BIT5


	)

249 
	#WKTUPIE
 
BIT4


	)

250 
	#EXINT3IE
 
BIT3


	)

251 
	#EXINT2IE
 
BIT2


	)

252 
	#EXINT1IE
 
BIT1


	)

253 
	#EXINT0IE
 
BIT0


	)

257 
	#REG1630_PWR_DN
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x8B))

	)

258 
	#SET_PWR_DN
 
REG1630_PWR_DN
=0xff;

	)

262 
	#REG1630_USB_PLUG_OUT
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x8C))

	)

263 
	#VDD5V_EXIST_FLG
 
BIT7


	)

264 
	#VDD5V_FALL_FLG
 
BIT6


	)

265 
	#WDT_FLG
 
BIT5


	)

267 
	#CLR_VDD5V_FALL_FLG
 (
REG1630_USB_PLUG_OUT
 &~
BIT6
)

	)

271 
	#REG1630_SET_CRYSTAL
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x8D))

	)

272 
	#FCLK_EN
 
BIT1


	)

273 
	#CKFAST
 
BIT0


	)

276 
	#SET_VIO_18
 (
REG1630_SET_CRYSTAL
 &~(
BIT3
|
BIT2
))

	)

277 
	#SET_VIO_30
 (
REG1630_SET_CRYSTAL
 |
BIT2
)

	)

278 
	#SET_VIO_50
 (
REG1630_SET_CRYSTAL
 |
BIT3
)

	)

279 
	#SET_FCLK_EN
 (
REG1630_SET_CRYSTAL
 |
BIT1
)

	)

280 
	#CLR_FCLK_EN
 (
REG1630_SET_CRYSTAL
 &~
BIT1
)

	)

281 
	#SET_CKFAST
 (
REG1630_SET_CRYSTAL
 |
BIT0
)

	)

282 
	#CLR_CKFAST
 (
REG1630_SET_CRYSTAL
 &~
BIT0
)

	)

285 
	#REG1630_FIFO_WR
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x50))

	)

287 
	#REG1630_FIFO_RD
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x51))

	)

288 
	#REG1630_SPIA_FIFO_RD
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TX1630REG_BASE
+0x51))

	)

290 
	#REG1630_SPIA_CTRL1
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x52))

	)

291 
	#SPIA_CPOL
 
BIT6


	)

292 
	#SPIA_CPHA
 
BIT5


	)

293 
	#SPIA_BUSY
 
BIT0


	)

295 
	#REG1630_SPIA_CTRL2
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x53))

	)

296 
	#SPIA_EN
 
BIT7


	)

299 
	#REG1630_SPIA_RC_TX_FIFO_CNT
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x52))

	)

300 
	#SPIA_TX_FIFO_CUR_CNT
 (
REG1630_SPIA_RC_TX_FIFO_CNT
&0xE0)>>4

	)

301 
	#SPIA_RC_FIFO_CUR_CNT
 (
REG1630_SPIA_RC_TX_FIFO_CNT
&0x0F)&0x0F

	)

303 
	#REG1630_SPIA_CTRL3
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x55))

	)

304 
	#SPIA_MODE_SELECT
 
BIT7


	)

305 
	#SPIA_CLR_FIFO_CUR_CNT
 
BIT1


	)

306 
	#SPIA_RC_FIFO_OVERRUN
 
BIT0


	)

310 
	#REG1630_SPIB_FIFO_WR
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x58))

	)

311 
	#REG1630_SPIB_FIFO_RD
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x59))

	)

313 
	#REG1630_SPIB_CTRL1_5A
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x5a))

	)

314 
	#SPIB_CPOL
 
BIT6


	)

315 
	#SPIB_CPHA
 
BIT5


	)

316 
	#SPIB_BUSY
 
BIT0


	)

319 
	#REG1630_SPIB_CTRL2_5B
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x5b))

	)

320 
	#SPIB_EN
 
BIT7


	)

322 
	#REG1630_SPIB_RC_TX_FIFO_CNT_5C
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x5C))

	)

323 
	#SPIB_TX_FIFO_CUR_CNT
 (
REG1630_SPIB_RC_TX_FIFO_CNT_5C
&0xE0)>>4

	)

324 
	#SPIB_RC_FIFO_CUR_CNT
 (
REG1630_SPIB_RC_TX_FIFO_CNT_5C
&0x0F)&0x0F

	)

325 
	#REG1630_SPIB_CTRL3_5D
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x5d))

	)

326 
	#SPIB_CLR_FIFO_CUR_CNT
 
BIT1


	)

327 
	#SPIB_RC_FIFO_OVERRUN
 
BIT0


	)

328 
	#CLR_SPIB_CLR_FIFO_CUR_CNT
 (
REG1630_SPIB_CTRL3_5D
&~
BIT1
)

	)

332 
	#REG1630_PWM_CTRL
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x90))

	)

333 
	#REG1630_PC_PWMA_PRD
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TX1630REG_BASE
+0x91))

334 
	#REG1630_PC_PWMA_DT
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TX1630REG_BASE
+0x92))

335 
	#REG1630_PC_PWMB_PRD
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TX1630REG_BASE
+0x94))

336 
	#REG1630_PC_PWMB_DT
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TX1630REG_BASE
+0x95))

337 

	)

349 
	#REG1630_PA_GPIO_9A
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x9A))

350 
	#GPIO_PA5
 
BIT5


	)

351 
	#GPIO_PA4
 
BIT4


	)

352 
	#GPIO_PA3
 
BIT3


	)

353 
	#GPIO_PA2
 
BIT2


	)

354 
	#GPIO_PA1
 
BIT1


	)

355 
	#GPIO_PA0
 
BIT0


	)

356 
	#SET_PA5
 (
REG1630_PA_GPIO_9A
 |
BIT5
)

357 
	#SET_PA4
 (
REG1630_PA_GPIO_9A
 |
BIT4
)

358 
	#CLR_PA4
 (
REG1630_PA_GPIO_9A
 &~
BIT4
)

359 
	#CLR_PA5
 (
REG1630_PA_GPIO_9A
 &~
BIT5
)

360 

	)

363 
	#REG1630_PA_GPIO_CON_AA
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0xAA))

364 
	#GPIO_PA5CON
 
BIT5


	)

365 
	#GPIO_PA4CON
 
BIT4


	)

366 
	#GPIO_PA3CON
 
BIT3


	)

367 
	#GPIO_PA2CON
 
BIT2


	)

368 
	#GPIO_PA1CON
 
BIT1


	)

369 
	#GPIO_PA0CON
 
BIT0


	)

370 
	#SET_GPIO_PA5
 (
REG1630_PA_GPIO_CON_AA
 |
BIT5
)

371 
	#SET_GPIO_PA4
 (
REG1630_PA_GPIO_CON_AA
 |
BIT4
)

372 

	)

375 
	#REG1630_PB_GPIO_9B
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x9B))

	)

376 
	#GPIO_PB7
 
BIT7


	)

377 
	#GPIO_PB6
 
BIT6


	)

378 
	#GPIO_PB5
 
BIT5


	)

379 
	#GPIO_PB4
 
BIT4


	)

380 
	#GPIO_PB3
 
BIT3


	)

381 
	#GPIO_PB2
 
BIT2


	)

382 
	#GPIO_PB1
 
BIT1


	)

383 
	#GPIO_PB0
 
BIT0


	)

384 
	#CLR_PB3
 (
REG1630_PB_GPIO_9B
 &~
BIT3
)

	)

385 
	#SET_PB3
 (
REG1630_PB_GPIO_9B
 |
BIT3
)

	)

388 
	#REG1630_PB_GPIO_CON_AB
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0xAB))

	)

389 
	#GPIO_PB7CON
 
BIT7


	)

390 
	#GPIO_PB6CON
 
BIT6


	)

391 
	#GPIO_PB5CON
 
BIT5


	)

392 
	#GPIO_PB4CON
 
BIT4


	)

393 
	#GPIO_PB3CON
 
BIT3


	)

394 
	#GPIO_PB2CON
 
BIT2


	)

395 
	#GPIO_PB1CON
 
BIT1


	)

396 
	#GPIO_PB0CON
 
BIT0


	)

398 
	#SET_GPIO_PB7
 (
REG1630_PB_GPIO_CON_AB
 |
BIT7
)

	)

399 
	#SET_GPIO_PB6
 (
REG1630_PB_GPIO_CON_AB
 |
BIT6
)

	)

400 
	#SET_GPIO_PB5
 (
REG1630_PB_GPIO_CON_AB
 |
BIT5
)

	)

401 
	#SET_GPIO_PB4
 (
REG1630_PB_GPIO_CON_AB
 |
BIT4
)

	)

402 
	#SET_GPIO_PB3
 (
REG1630_PB_GPIO_CON_AB
 |
BIT3
)

	)

403 
	#SET_GPIO_PB2
 (
REG1630_PB_GPIO_CON_AB
 |
BIT2
)

	)

404 
	#SET_GPIO_PB1
 (
REG1630_PB_GPIO_CON_AB
 |
BIT1
)

	)

405 
	#SET_GPIO_PB0
 (
REG1630_PB_GPIO_CON_AB
 |
BIT0
)

	)

407 
	#CLR_GPIO_PB7
 (
REG1630_PB_GPIO_CON_AB
 &~
BIT7
)

	)

408 
	#CLR_GPIO_PB6
 (
REG1630_PB_GPIO_CON_AB
 &~
BIT6
)

	)

409 
	#CLR_GPIO_PB5
 (
REG1630_PB_GPIO_CON_AB
 &~
BIT5
)

	)

410 
	#CLR_GPIO_PB4
 (
REG1630_PB_GPIO_CON_AB
 &~
BIT4
)

	)

411 
	#CLR_GPIO_PB3
 (
REG1630_PB_GPIO_CON_AB
 &~
BIT3
)

	)

412 
	#CLR_GPIO_PB2
 (
REG1630_PB_GPIO_CON_AB
 &~
BIT2
)

	)

413 
	#CLR_GPIO_PB1
 (
REG1630_PB_GPIO_CON_AB
 &~
BIT1
)

	)

414 
	#CLR_GPIO_PB0
 (
REG1630_PB_GPIO_CON_AB
 &~
BIT0
)

	)

418 
	#REG1630_PC_GPIO_9C
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0x9C))

	)

419 
	#GPIO_PC7
 
BIT7


	)

420 
	#GPIO_PC6
 
BIT6


	)

421 
	#GPIO_PC5
 
BIT5


	)

422 
	#GPIO_PC4
 
BIT4


	)

423 
	#GPIO_PC3
 
å1


	)

424 
	#GPIO_PC2
 
BIT2


	)

425 
	#GPIO_PC1
 
BIT1


	)

426 
	#GPIO_PC0
 
BIT0


	)

428 
	#SET_PC0
 (
REG1630_PC_GPIO_9C
 |
BIT0
)

	)

429 
	#SET_PC5
 (
REG1630_PC_GPIO_9C
 |
BIT5
)

	)

430 
	#CLR_PC0
 (
REG1630_PC_GPIO_9C
 &~
BIT0
)

	)

431 
	#CLR_PC5
 (
REG1630_PC_GPIO_9C
 &~
BIT5
)

	)

432 
	#SET_PC4
 (
REG1630_PC_GPIO_9C
 |
BIT4
)

	)

433 
	#CLR_PC4
 (
REG1630_PC_GPIO_9C
 &~
BIT4
)

	)

434 
	#CLR_PC7
 (
REG1630_PC_GPIO_9C
 &~
BIT7
)

	)

436 
	#SET_PC3
 (
REG1630_PC_GPIO_9C
 |
BIT3
)

	)

437 
	#SET_PC1
 (
REG1630_PC_GPIO_9C
 |
BIT1
)

	)

440 
	#REG1630_PC_GPIO_CON_AC
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0xAC))

	)

441 
	#GPIO_PC7CON
 
BIT7


	)

442 
	#GPIO_PC6CON
 
BIT6


	)

443 
	#GPIO_PC5CON
 
BIT5


	)

444 
	#GPIO_PC4CON
 
BIT4


	)

446 
	#SET_GPIO_PC7
 (
REG1630_PC_GPIO_CON_AC
 |
BIT7
)

	)

447 
	#SET_GPIO_PC6
 (
REG1630_PC_GPIO_CON_AC
 |
BIT6
)

	)

448 
	#SET_GPIO_PC5
 (
REG1630_PC_GPIO_CON_AC
 |
BIT5
)

	)

449 
	#SET_GPIO_PC4
 (
REG1630_PC_GPIO_CON_AC
 |
BIT4
)

	)

451 
	#CLR_GPIO_PC7
 (
REG1630_PC_GPIO_CON_AC
 &~
BIT7
)

	)

452 
	#CLR_GPIO_PC6
 (
REG1630_PC_GPIO_CON_AC
 &~
BIT6
)

	)

453 
	#CLR_GPIO_PC5
 (
REG1630_PC_GPIO_CON_AC
 &~
BIT5
)

	)

454 
	#CLR_GPIO_PC4
 (
REG1630_PC_GPIO_CON_AC
 &~
BIT4
)

	)

462 
	#REG1630_UART_TX_BUF_B0
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0xb0))

	)

466 
	#REG1630_UART_RX_BUF_B1
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0xb1))

	)

470 
	#REG1630_UART_TX_BUF_B2
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0xb2))

	)

471 
	#UTX_EN
 
BIT7


	)

472 
	#URX_EN
 
BIT6


	)

473 
	#UTX_BUSY
 
BIT0


	)

475 
	#SET_UTX_EN
 (
REG1630_UART_TX_BUF_B2
 |=
BIT7
)

	)

476 
	#CLR_UTX_EN
 (
REG1630_UART_TX_BUF_B2
 &=~
BIT7
)

	)

477 
	#SET_URX_EN
 (
REG1630_UART_TX_BUF_B2
 |=
BIT6
)

	)

478 
	#CLR_URX_EN
 (
REG1630_UART_TX_BUF_B2
 &=~
BIT6
)

	)

481 
	#INTER_DELAY_NONE_STOP_BIT
 (
REG1630_UART_TX_BUF_B2
 &=0xf3)

	)

482 
	#INTER_DELAY_1_STOP_BIT
 (
REG1630_UART_TX_BUF_B2
 |=
BIT2
)

	)

483 
	#INTER_DELAY_2_STOP_BIT
 (
REG1630_UART_TX_BUF_B2
 |=
BIT3
)

	)

484 
	#INTER_DELAY_3_STOP_BIT
 (
REG1630_UART_TX_BUF_B2
 |=(
BIT2
|
BIT3
))

	)

488 
	#REG1630_UART_TX_RC_COUNT_B3
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0xb3))

	)

489 
	#UART_TX_FIFO_CNT
 ((
REG1630_UART_TX_RC_COUNT_B3
 & 0xf0)>>4)

	)

490 
	#UART_RC_FIFO_CNT
 (
REG1630_UART_TX_RC_COUNT_B3
 & 0x0f)

	)

494 
	#REG1630_UART_BAUD_RATE_H
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0xb4))

	)

498 
	#REG1630_UART_BAUD_RATE_L
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0xb5))

	)

502 
	#REG1630_UART_MODE_B6
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0xb6))

	)

503 
	#STOP_BIT
 
BIT5


	)

504 
	#PAR_EN
 
BIT4


	)

505 
	#EVEN
 
BIT3


	)

506 
	#STICK
 
BIT2


	)

507 
	#BREAK
 
BIT1


	)

509 
	#SET_UMODE_5BIT
 (
REG1630_UART_MODE_B6
 &0x3f)

	)

510 
	#SET_UMODE_6BIT
 (
REG1630_UART_MODE_B6
 |
BIT7
)

	)

511 
	#SET_UMODE_7BIT
 (
REG1630_UART_MODE_B6
 |
BIT6
)

	)

512 
	#SET_UMODE_8BIT
 (
REG1630_UART_MODE_B6
 |(
BIT7
|
BIT6
))

	)

514 
	#SET_STOP_BIT
 (
REG1630_UART_MODE_B6
 |
BIT5
)

	)

515 
	#SET_PAR_EN
 (
REG1630_UART_MODE_B6
 |
BIT4
)

	)

516 
	#SET_EVEN
 (
REG1630_UART_MODE_B6
 |
BIT3
)

	)

517 
	#SET_STICK
 (
REG1630_UART_MODE_B6
 |
BIT2
)

	)

518 
	#SET_BREAK
 (
REG1630_UART_MODE_B6
 |
BIT1
)

	)

520 
	#CLR_STOP_BIT
 (
REG1630_UART_MODE_B6
 &~
BIT5
)

	)

521 
	#CLR_PAR_EN
 (
REG1630_UART_MODE_B6
 &~
BIT4
)

	)

522 
	#CLR_EVEN
 (
REG1630_UART_MODE_B6
 &~
BIT3
)

	)

523 
	#CLR_STICK
 (
REG1630_UART_MODE_B6
 &~
BIT2
)

	)

524 
	#CLR_BREAK
 (
REG1630_UART_MODE_B6
 &~
BIT1
)

	)

529 
	#REG1630_CLR_UART_TX_RC_CNT_B7
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0xb7))

	)

530 
	#CLR_UART_TX_CUR_CNT
 (
REG1630_CLR_UART_TX_RC_CNT_B7
 &~
BIT1
)

	)

531 
	#CLR_UART_RC_CUR_CNT
 (
REG1630_CLR_UART_TX_RC_CNT_B7
 &~
BIT0
)

	)

535 
	#REG1630_UART_TX_RC_ERROR_B9
 (*(
BYTE
 vﬁ©ûê
xd©a
 *)(
TMU3112REG_BASE
+0xb9))

	)

537 
	#PARITY_ERR
 
BIT7


	)

538 
	#OVERUN_ERR
 
BIT6


	)

539 
	#FRAME_ERR
 
BIT5


	)

540 
	#BREAK_ACT
 
BIT4


	)

	@typedef.h

1 #i‚de‡
_TYPEDEF_H


2 
	#_TYPEDEF_H


	)

4 
	tUCHAR
;

5 
	tBYTE
;

6 
	tuöt8
;

7 
	tWORD
;

8 
	tuöt16
;

9 
	tULONG
;

10 
	tDWORD
;

11 
bô
 
	tFLAG
;

13 
	s_XMT_BUF
{

14 
BYTE
 
	mbLígth
;

15 
BYTE
 *
	mp
;

16 }
	tXMT
;

19 
	s_TCMD_FORMAT
{

21 
BYTE
 
	mbDevi˚Së
;

22 
WORD
 
	mwdD©aLí
;

23 
BYTE
 
	mbD©aTy≥
;

24 
BYTE
 
	mbCu°‹mîTy≥
;

26 }
	tTCMD
;

	@usb_desc.c

14 
	sDESCRIPTORS
 {

15 
BYTE
 
	mbStdDevDsc
[
STD_DSC_SIZE
];

16 
BYTE
 
	mbCfg1
[
CFG_DSC_SIZE
 + \

17 
IF_DSC_SIZE
*2 + \

18 
HID_DSC_SIZE
*2 + \

19 
EP_DSC_SIZE
*3];

20 } 
	tDESCRIPTORS
;

24 
DESCRIPTORS
 
code
 
	ggDes¸ùt‹M≠
 = {

133 
code
 
	ghid1_desc
 = {

176 
code
 
	ghid2_desc
 = {

	@usb_desc.h

15 #i‚de‡ 
_USB_DESC_H_


16 
	#_USB_DESC_H_


	)

19 
	#STD_DSC_SIZE
 18

20 
	#CFG_DSC_SIZE
 9

21 
	#IF_DSC_SIZE
 9

22 
	#EP_DSC_SIZE
 7

23 

	)

28 
	#°d_bLígth
 0

29 
	#°d_bDes¸ùt‹Ty≥
 1

30 
	#°d_bcdUSB
 2

31 
	#°d_bDevi˚Cœss
 4

32 
	#°d_bDevi˚SubCœss
 5

33 
	#°d_bDevi˚PrŸocﬁ
 6

34 
	#°d_bMaxPackëSize0
 7

35 
	#°d_idVíd‹
 8

36 
	#°d_idProdu˘
 10

37 
	#°d_bcdDevi˚
 12

38 
	#°d_iM™uÁ˘uªr
 14

39 
	#°d_°d_iProdu˘
 15

40 
	#°d_iSîülNumbî
 16

41 
	#°d_bNumC⁄figuøti⁄s
 17

42 

	)

44 
	#cfg_bLígth
 0

45 
	#cfg_bDes¸ùt‹Ty≥
 1

46 
	#cfg_wTŸÆLígth_lsb
 2

47 
	#cfg_wTŸÆLígth_msb
 3

48 
	#cfg_bNumI¡îÁ˚s
 4

49 
	#cfg_bC⁄figuøti⁄VÆue
 5

50 
	#cfg_iC⁄figuøti⁄
 6

51 
	#cfg_bmAâribuãs
 7

52 
	#cfg_MaxPowî
 8

53 

	)

55 
	#if_bLígth
 0

56 
	#if_bDes¸ùt‹Ty≥
 1

57 
	#if_bI¡îÁ˚Numbî
 2

58 
	#if_bA…î«ãSëtög
 3

59 
	#if_bNumEndpoöts
 4

60 
	#if_bI¡îÁ˚Cœss
 5

61 
	#if_bI¡îÁ˚SubCœss
 6

62 
	#if_bI¡îÁ˚ProcŸﬁ
 7

63 
	#if_iI¡îÁ˚
 8

64 

	)

66 
	#ï_bLígth
 0

67 
	#ï_bDes¸ùt‹Ty≥
 1

68 
	#ï_bEndpoötAddªss
 2

69 
	#ï_bmAâribuãs
 3

70 
	#ï_wMaxPackëSize
 4

71 
	#ï_bI¡îvÆ
 6

72 

	)

	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

37 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

41 
__BEGIN_NAMESPACE_STD


43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

44 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

45 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

49 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 
__END_NAMESPACE_STD


55 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


56 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
__c
, 
size_t
 
__n
)

58 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

62 
__BEGIN_NAMESPACE_STD


64 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

67 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

68 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

71 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


74 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__OPTIMIZE__


80 
__exã∫_Æways_ölöe
 *

81 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


83  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

86 
__exã∫_Æways_ölöe
 
__c⁄°
 *

87 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


89  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

92 
	}
}

94 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

95 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

97 
__END_NAMESPACE_STD


99 #ifde‡
__USE_GNU


102 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


103 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

105 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

108 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

113 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


114 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

116 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

119 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

120 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 
__BEGIN_NAMESPACE_STD


127 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

131 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

132 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

135 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

138 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

139 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

142 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

143 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

145 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

149 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

150 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

152 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

153 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((2));

155 
__END_NAMESPACE_STD


157 #ifde‡
__USE_XOPEN2K8


161 
	~<xloˇÀ.h
>

164 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

165 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

167 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

168 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

171 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


173 *
	$°rdup
 (
__c⁄°
 *
__s
)

174 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

180 #i‡
deföed
 
__USE_XOPEN2K8


181 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

182 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

185 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


187 
	#°rdu∑
(
s
) \

188 (
__exãnsi⁄__
 \

190 
__c⁄°
 *
__ﬁd
 = (
s
); \

191 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

192 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

193 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

194 
	}
}))

	)

197 
	#°∫du∑
(
s
, 
n
) \

198 (
__exãnsi⁄__
 \

200 
__c⁄°
 *
__ﬁd
 = (
s
); \

201 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

202 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

203 
__√w
[
__Àn
] = '\0'; \

204 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

205 }))

	)

208 
	g__BEGIN_NAMESPACE_STD


210 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


213 *
°rchr
 (*
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

215 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 #ifde‡
__OPTIMIZE__


219 
__exã∫_Æways_ölöe
 *

220 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


222  
__buûtö_°rchr
 (
__s
, 
__c
);

225 
__exã∫_Æways_ölöe
 
__c⁄°
 *

226 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


228  
__buûtö_°rchr
 (
__s
, 
__c
);

233 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

234 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


240 *
	`°ºchr
 (*
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

242 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 #ifde‡
__OPTIMIZE__


246 
__exã∫_Æways_ölöe
 *

247 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


249  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

252 
__exã∫_Æways_ölöe
 
__c⁄°
 *

253 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


255  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

258 
	}
}

260 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

261 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 
__END_NAMESPACE_STD


265 #ifde‡
__USE_GNU


268 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


269 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

271 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

275 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

279 
__BEGIN_NAMESPACE_STD


282 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

283 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

286 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


292 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

294 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 #ifde‡
__OPTIMIZE__


298 
__exã∫_Æways_ölöe
 *

299 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


301  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

304 
__exã∫_Æways_ölöe
 
__c⁄°
 *

305 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


307  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

310 
	}
}

312 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

313 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

316 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


319 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

321 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

322 
__c⁄°
 *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

325 #ifde‡
__OPTIMIZE__


326 
__exã∫_Æways_ölöe
 *

327 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


329  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

332 
__exã∫_Æways_ölöe
 
__c⁄°
 *

333 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


335  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

338 
	}
}

340 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

347 
__THROW
 
	`__n⁄nuŒ
 ((2));

348 
__END_NAMESPACE_STD


352 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

353 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

354 **
__ª°ri˘
 
__ßve_±r
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

356 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


357 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

358 **
__ª°ri˘
 
__ßve_±r
)

359 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

362 #ifde‡
__USE_GNU


364 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


365 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

367 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

368 
__c⁄°
 *
__√edÀ
)

369 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

371 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

372 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 #ifde‡
__USE_GNU


380 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

381 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

386 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

387 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

389 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

390 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

395 
__BEGIN_NAMESPACE_STD


397 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

399 
__END_NAMESPACE_STD


401 #ifdef 
__USE_XOPEN2K8


404 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

405 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

409 
__BEGIN_NAMESPACE_STD


411 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

412 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


421 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


424 #ifde‡
__REDIRECT_NTH


425 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

426 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

427 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

429 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

430 
__THROW
 
	`__n⁄nuŒ
 ((2));

431 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

436 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 #ifde‡
__USE_XOPEN2K8


443 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

449 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

451 #ifde‡
__USE_BSD


453 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

454 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

460 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

461 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

464 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


467 *
	`ödex
 (*
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

472 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


473 
__exã∫_Æways_ölöe
 *

474 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


476  
	`__buûtö_ödex
 (
__s
, 
__c
);

479 
__exã∫_Æways_ölöe
 
__c⁄°
 *

480 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


482  
	`__buûtö_ödex
 (
__s
, 
__c
);

485 
	}
}

487 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

488 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

492 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


495 *
	`rödex
 (*
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

500 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


501 
__exã∫_Æways_ölöe
 *

502 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


504  
	`__buûtö_rödex
 (
__s
, 
__c
);

507 
__exã∫_Æways_ölöe
 
__c⁄°
 *

508 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


510  
	`__buûtö_rödex
 (
__s
, 
__c
);

513 
	}
}

515 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

516 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

521 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifdef 
__USE_GNU


526 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifde‡
__GNUC__


528 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

529 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

81 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

83 
	`__w¨n_mem£t_zîo_Àn
 ();

84  
__de°
;

86  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

87 
	}
}

89 #ifde‡
__USE_BSD


90 
__exã∫_Æways_ölöe
 

91 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

92 
size_t
 
__Àn
))

94 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

95 
	}
}

97 
__exã∫_Æways_ölöe
 

98 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

100 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

101 
	}
}

104 
__exã∫_Æways_ölöe
 *

105 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

107  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

108 
	}
}

110 #ifde‡
__USE_GNU


111 
__exã∫_Æways_ölöe
 *

112 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

114  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

115 
	}
}

119 
__exã∫_Æways_ölöe
 *

120 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

121 
size_t
 
__Àn
))

123  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

124 
	}
}

127 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

128 
size_t
 
__de°Àn
Ë
__THROW
;

129 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

130 
__c⁄°
 *
__§c
,

131 
size_t
 
__n
), 
°≤˝y
);

133 
__exã∫_Æways_ölöe
 *

134 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

136 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

137 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

138  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

139  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
__exã∫_Æways_ölöe
 *

144 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

146  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

147 
	}
}

150 
__exã∫_Æways_ölöe
 *

151 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

152 
size_t
 
__Àn
))

154  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

155 
	}
}

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

95 #unde‡
__USE_ISOC99


96 #unde‡
__USE_ISOC95


97 #unde‡
__USE_POSIX


98 #unde‡
__USE_POSIX2


99 #unde‡
__USE_POSIX199309


100 #unde‡
__USE_POSIX199506


101 #unde‡
__USE_XOPEN


102 #unde‡
__USE_XOPEN_EXTENDED


103 #unde‡
__USE_UNIX98


104 #unde‡
__USE_XOPEN2K


105 #unde‡
__USE_XOPEN2K8


106 #unde‡
__USE_LARGEFILE


107 #unde‡
__USE_LARGEFILE64


108 #unde‡
__USE_FILE_OFFSET64


109 #unde‡
__USE_BSD


110 #unde‡
__USE_SVID


111 #unde‡
__USE_MISC


112 #unde‡
__USE_ATFILE


113 #unde‡
__USE_GNU


114 #unde‡
__USE_REENTRANT


115 #unde‡
__USE_FORTIFY_LEVEL


116 #unde‡
__FAVOR_BSD


117 #unde‡
__KERNEL_STRICT_NAMES


121 #i‚de‡
_LOOSE_KERNEL_NAMES


122 
	#__KERNEL_STRICT_NAMES


	)

126 
	#__USE_ANSI
 1

	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

144 #i‡
deföed
 
_BSD_SOURCE
 && \

145 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

146 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

147 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

148 
	#__FAVOR_BSD
 1

	)

152 #ifde‡
_GNU_SOURCE


153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_POSIX_SOURCE


156 
	#_POSIX_SOURCE
 1

	)

157 #unde‡
_POSIX_C_SOURCE


158 
	#_POSIX_C_SOURCE
 200809L

	)

159 #unde‡
_XOPEN_SOURCE


160 
	#_XOPEN_SOURCE
 700

	)

161 #unde‡
_XOPEN_SOURCE_EXTENDED


162 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

163 #unde‡
_LARGEFILE64_SOURCE


164 
	#_LARGEFILE64_SOURCE
 1

	)

165 #unde‡
_BSD_SOURCE


166 
	#_BSD_SOURCE
 1

	)

167 #unde‡
_SVID_SOURCE


168 
	#_SVID_SOURCE
 1

	)

169 #unde‡
_ATFILE_SOURCE


170 
	#_ATFILE_SOURCE
 1

	)

175 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

176 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

177 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

178 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

179 
	#_BSD_SOURCE
 1

	)

180 
	#_SVID_SOURCE
 1

	)

187 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

188 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

189 
	#__USE_ISOC99
 1

	)

193 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

194 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

195 
	#__USE_ISOC95
 1

	)

200 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

201 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

202 
	#_POSIX_SOURCE
 1

	)

203 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

204 
	#_POSIX_C_SOURCE
 2

	)

205 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

206 
	#_POSIX_C_SOURCE
 199506L

	)

207 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

208 
	#_POSIX_C_SOURCE
 200112L

	)

210 
	#_POSIX_C_SOURCE
 200809L

	)

212 
	#__USE_POSIX_IMPLICITLY
 1

	)

215 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


216 
	#__USE_POSIX
 1

	)

219 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX2
 1

	)

223 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

224 
	#__USE_POSIX199309
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

228 
	#__USE_POSIX199506
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

232 
	#__USE_XOPEN2K
 1

	)

233 #unde‡
__USE_ISOC99


234 
	#__USE_ISOC99
 1

	)

237 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

238 
	#__USE_XOPEN2K8
 1

	)

239 #unde‡
_ATFILE_SOURCE


240 
	#_ATFILE_SOURCE
 1

	)

243 #ifdef 
_XOPEN_SOURCE


244 
	#__USE_XOPEN
 1

	)

245 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

246 
	#__USE_XOPEN_EXTENDED
 1

	)

247 
	#__USE_UNIX98
 1

	)

248 #unde‡
_LARGEFILE_SOURCE


249 
	#_LARGEFILE_SOURCE
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

252 
	#__USE_XOPEN2K8
 1

	)

254 
	#__USE_XOPEN2K
 1

	)

255 #unde‡
__USE_ISOC99


256 
	#__USE_ISOC99
 1

	)

259 #ifde‡
_XOPEN_SOURCE_EXTENDED


260 
	#__USE_XOPEN_EXTENDED
 1

	)

265 #ifde‡
_LARGEFILE_SOURCE


266 
	#__USE_LARGEFILE
 1

	)

269 #ifde‡
_LARGEFILE64_SOURCE


270 
	#__USE_LARGEFILE64
 1

	)

273 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

274 
	#__USE_FILE_OFFSET64
 1

	)

277 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


278 
	#__USE_MISC
 1

	)

281 #ifdef 
_BSD_SOURCE


282 
	#__USE_BSD
 1

	)

285 #ifdef 
_SVID_SOURCE


286 
	#__USE_SVID
 1

	)

289 #ifdef 
_ATFILE_SOURCE


290 
	#__USE_ATFILE
 1

	)

293 #ifdef 
_GNU_SOURCE


294 
	#__USE_GNU
 1

	)

297 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


298 
	#__USE_REENTRANT
 1

	)

301 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

302 && 
deföed
 
__OPTIMIZE__
 && __OPTIMIZE__ > 0

303 #i‡!
__GNUC_PREREQ
 (4, 1)

304 #ifde‡
__GNUC_RH_RELEASE__


305 #w¨nög 
_FORTIFY_SOURCE
 
suµ‹ãd
 
⁄ly
 
wôh
 
GCC
 4.1 
™d
 
œãr


307 
	#__USE_FORTIFY_LEVEL
 0

	)

308 #ñi‡
_FORTIFY_SOURCE
 > 1

309 
	#__USE_FORTIFY_LEVEL
 2

	)

311 
	#__USE_FORTIFY_LEVEL
 1

	)

314 
	#__USE_FORTIFY_LEVEL
 0

	)

318 
	#__STDC_IEC_559__
 1

	)

319 
	#__STDC_IEC_559_COMPLEX__
 1

	)

322 
	#__STDC_ISO_10646__
 200009L

	)

330 #unde‡
__GNU_LIBRARY__


331 
	#__GNU_LIBRARY__
 6

	)

335 
	#__GLIBC__
 2

	)

336 
	#__GLIBC_MINOR__
 11

	)

338 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

339 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

342 #i‡
deföed
 
__GNUC__
 \

343 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

344 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

345 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

346 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

350 #i‚de‡
__ASSEMBLER__


351 #i‚de‡
_SYS_CDEFS_H


352 
	~<sys/cdefs.h
>

357 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


358 
	#__USE_LARGEFILE
 1

	)

359 
	#__USE_LARGEFILE64
 1

	)

365 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

366 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

367 && 
deföed
 
	g__exã∫_ölöe


368 
	#__USE_EXTERN_INLINES
 1

	)

376 
	~<gnu/°ubs.h
>

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

519 #ifde‡
__USE_GNU


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #ifde‡
__USE_GNU


551 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

553 
__END_NAMESPACE_STD


555 #ifde‡
__USE_ISOC99


556 
__BEGIN_NAMESPACE_C99


559 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

560 
__END_NAMESPACE_C99


564 
__BEGIN_NAMESPACE_STD


566 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

567 
__END_NAMESPACE_STD


571 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


604 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

614 #i‚de‡
__USE_FILE_OFFSET64


615 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__REDIRECT


618 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

619 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 
	#mk°emp
 
mk°emp64


	)

624 #ifde‡
__USE_LARGEFILE64


625 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

629 #ifde‡
__USE_MISC


636 #i‚de‡
__USE_FILE_OFFSET64


637 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

639 #ifde‡
__REDIRECT


640 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

641 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 
	#mk°emps
 
mk°emps64


	)

646 #ifde‡
__USE_LARGEFILE64


647 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

648 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

652 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


658 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 #ifde‡
__USE_GNU


668 #i‚de‡
__USE_FILE_OFFSET64


669 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

671 #ifde‡
__REDIRECT


672 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

673 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 
	#mko°emp
 
mko°emp64


	)

678 #ifde‡
__USE_LARGEFILE64


679 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

688 #i‚de‡
__USE_FILE_OFFSET64


689 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

690 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #ifde‡
__REDIRECT


693 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

694 
__Êags
), 
mko°emps64
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 
	#mko°emps
 
mko°emps64


	)

700 #ifde‡
__USE_LARGEFILE64


701 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

702 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

707 
__BEGIN_NAMESPACE_STD


712 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

713 
__END_NAMESPACE_STD


716 #ifdef 
__USE_GNU


719 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

720 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


729 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

730 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

735 #i‚de‡
__COMPAR_FN_T


736 
	#__COMPAR_FN_T


	)

737 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

739 #ifdef 
__USE_GNU


740 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

743 #ifde‡
__USE_GNU


744 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

747 
__BEGIN_NAMESPACE_STD


750 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

751 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

752 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

756 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

757 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

758 #ifde‡
__USE_GNU


759 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

760 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

761 
	`__n⁄nuŒ
 ((1, 4));

766 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

767 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

768 
__END_NAMESPACE_STD


770 #ifde‡
__USE_ISOC99


771 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

772 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__BEGIN_NAMESPACE_STD


780 
div_t
 
	$div
 (
__numî
, 
__díom
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

782 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

783 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__END_NAMESPACE_STD


786 #ifde‡
__USE_ISOC99


787 
__BEGIN_NAMESPACE_C99


788 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

789 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
__END_NAMESPACE_C99


795 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


802 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

803 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

808 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

815 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

818 #ifde‡
__USE_MISC


820 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

821 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

822 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

824 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

826 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

832 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

833 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

834 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

835 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

836 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

837 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

839 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

840 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

841 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

842 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

843 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

844 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

845 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

846 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

851 
__BEGIN_NAMESPACE_STD


854 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

857 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

858 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

861 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

865 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

866 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

868 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

869 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

870 
__THROW
;

871 
__END_NAMESPACE_STD


874 #ifde‡
__USE_SVID


879 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 #ifde‡
__USE_XOPEN_EXTENDED


890 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

891 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

892 **
__ª°ri˘
 
__vÆuï
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

897 #ifde‡
__USE_XOPEN


899 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #ifde‡
__USE_XOPEN2K


907 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

910 #ifde‡
__USE_XOPEN


915 
	$gø¡±
 (
__fd
Ë
__THROW
;

919 
	$u∆ock±
 (
__fd
Ë
__THROW
;

924 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

927 #ifde‡
__USE_GNU


931 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

932 
__THROW
 
	`__n⁄nuŒ
 ((2));

935 
	`gë±
 ();

938 #ifde‡
__USE_BSD


942 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

943 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


949 
	~<bôs/°dlib.h
>

951 #ifde‡
__LDBL_COMPAT


952 
	~<bôs/°dlib-ldbl.h
>

956 #unde‡
__√ed_mÆloc_™d_ˇŒoc


958 
__END_DECLS


	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3) \

136 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
	g__GNUC__
 == 4 \

137 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

138 && 
__GNUC_RH_RELEASE__
 >= 31)

139 
	#__w¨nde˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

141 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

142 
	#__îr‹de˛
(
«me
, 
msg
) \

143 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

145 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

146 
	#__w¨«âr
(
msg
)

	)

147 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

151 #i‡
__GNUC_PREREQ
 (2,97)

153 
	#__Êex¨r
 []

	)

155 #ifde‡
__GNUC__


156 
	#__Êex¨r
 [0]

	)

158 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

159 
	#__Êex¨r
 []

	)

162 
	#__Êex¨r
 [1]

	)

178 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

180 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 #ifde‡
__˝lu•lus


182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

188 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

189 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

202 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

203 
	#__©åibuã__
(
xyz
Ë

	)

209 #i‡
__GNUC_PREREQ
 (2,96)

210 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

212 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (2,96)

219 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

221 
	#__©åibuã_puª__


	)

227 #i‡
__GNUC_PREREQ
 (3,1)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

229 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

231 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

232 
	#__©åibuã_noölöe__


	)

236 #i‡
__GNUC_PREREQ
 (3,2)

237 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

239 
	#__©åibuã_dïªˇãd__


	)

248 #i‡
__GNUC_PREREQ
 (2,8)

249 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

251 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

258 #i‡
__GNUC_PREREQ
 (2,97)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

260 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

262 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

267 #i‡
__GNUC_PREREQ
 (3,3)

268 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

270 
	#__n⁄nuŒ
(
∑øms
)

	)

275 #i‡
__GNUC_PREREQ
 (3,4)

276 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

277 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

278 #i‡
__USE_FORTIFY_LEVEL
 > 0

279 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

282 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

284 #i‚de‡
__wur


285 
	#__wur


	)

289 #i‡
__GNUC_PREREQ
 (3,2)

290 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

292 
	#__Æways_ölöe
 
__ölöe


	)

297 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

298 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

299 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

300 && 
__GNUC_RH_RELEASE__
 >= 31)

301 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


302 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

303 #i‡
__GNUC_PREREQ
 (4,3) \

304 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

305 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

306 && 
__GNUC_RH_RELEASE__
 >= 31)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 \

311 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

314 
	#__exã∫_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__exã∫_Æways_ölöe
 \

317 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

319 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

326 #i‡
__GNUC_PREREQ
 (4,3) \

327 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

328 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

329 && 
__GNUC_RH_RELEASE__
 >= 31)

330 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

331 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

338 #i‡!
__GNUC_PREREQ
 (2,8)

339 
	#__exãnsi⁄__


	)

343 #i‡!
__GNUC_PREREQ
 (2,92)

344 
	#__ª°ri˘


	)

350 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


351 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

353 #ifde‡
__GNUC__


354 
	#__ª°ri˘_¨r


	)

356 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

357 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

360 
	#__ª°ri˘_¨r


	)

365 
	~<bôs/w‹dsize.h
>

367 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


368 
	#__LDBL_COMPAT
 1

	)

369 #ifde‡
__REDIRECT


370 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

371 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

372 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

373 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

374 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

375 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

376 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

377 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

378 
	#__LDBL_REDIR_DECL
(
«me
) \

379 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

380 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

381 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

386 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


387 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

388 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

389 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

390 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

391 
	#__LDBL_REDIR_DECL
(
«me
)

	)

392 #ifde‡
__REDIRECT


393 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

394 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

395 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@
1
.
1
/usr/include
50
977
INCFILE.H
REG320.H
SCSI.h
USBtran.h
eeprom.c
eeprom.h
global.h
iic.c
iic.h
iicbridge.c
iicbridge.h
inttran.h
isr.c
main.c
main.h
new.c
tmu3112Reg.h
typedef.h
usb_desc.c
usb_desc.h
/usr/include/string.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/features.h
/usr/include/xlocale.h
/usr/include/bits/types.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/stdlib.h
/usr/include/sys/cdefs.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/typesizes.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/sys/types.h
/usr/include/bits/pthreadtypes.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/bits/select.h
/usr/include/bits/sigset.h
/usr/include/bits/time.h
